name: PR

on:
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      # Get values for cache paths to be used in later steps
      - id: go-cache-paths
        run: |
          echo "GOCACHE=$(go env GOCACHE)" >> $GITHUB_ENV
          echo "GOMODCACHE=$(go env GOMODCACHE)" >> $GITHUB_ENV

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Fix dumb git issue
        run: |
          git config --global --add safe.directory ${PWD}

      # Cache go build cache, used to speedup go test
      - name: Go Build Cache
        uses: actions/cache@v3
        with:
          path: ${{ env.GOCACHE }}
          key: ${{ runner.os }}-go-build-${{ hashFiles('**/go.sum') }}

      # Cache go mod cache, used to speedup builds
      - name: Go Mod Cache
        uses: actions/cache@v3
        with:
          path: ${{ env.GOMODCACHE }}
          key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}
            ${{ runner.os }}-go-mod

      - name: Build
        run: |
          make monetr

  test:
    name: Test
    runs-on: ubuntu-latest
    container: ghcr.io/monetr/build-containers/debian:12.1
    env:
      MONETR_PG_ADDRESS: postgres
      MONETR_PG_PASSWORD: ""
      MONETR_PG_USERNAME: api-testing
      MONETR_PG_DATABASE: test-db
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
          POSTGRES_USER: api-testing
          POSTGRES_DB: test-db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      # Get values for cache paths to be used in later steps
      - id: go-cache-paths
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
          echo "GOCACHE=$(go env GOCACHE)" >> $GITHUB_ENV
          echo "GOMODCACHE=$(go env GOMODCACHE)" >> $GITHUB_ENV

      - uses: actions/checkout@v4
      - name: Fix dumb git issue
        run: |
          git config --global --add safe.directory ${PWD}

      # Cache go build cache, used to speedup go test
      - name: Go Build Cache
        uses: actions/cache@v3
        with:
          path: ${{ env.GOCACHE }}
          key: ${{ runner.os }}-test-go-build-${{ hashFiles('**/go.sum', '**/**.go') }}
          restore-keys: |
            ${{ runner.os }}-test-go-build-${{ hashFiles('**/go.sum', '**/**.go') }}
            ${{ runner.os }}-test-go-build

      # Cache go mod cache, used to speedup builds
      - name: Go Mod Cache
        uses: actions/cache@v3
        with:
          path: ${{ env.GOMODCACHE }}
          key: ${{ runner.os }}-test-go-mod-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-test-go-mod-${{ hashFiles('**/go.sum') }}
            ${{ runner.os }}-test-go-mod

      - name: pnpm Cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-test-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-test-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
            ${{ runner.os }}-test-pnpm-store

      - name: Test
        run: |
          make test

      - name: CodeCov
        if: always()
        uses: codecov/codecov-action@v3
        with:
          name: monetr
          directory: ${{ github.workspace }}/build/tests
          root_dir: ${{ github.workspace }}

  container:
    name: Container
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Build monetr container
        run: |
          git config --global --add safe.directory ${PWD}
          make container

  yaml:
    name: Kubernetes YAMLs
    runs-on: ubuntu-latest
    container: ghcr.io/monetr/build-containers/debian:12.1
    steps:
      - uses: actions/checkout@v4
      - name: Generate kubernetes yamls
        run: |
          git config --global --add safe.directory ${PWD}
          ENVIRONMENT=my.monetr.dev DEPLOY_VERSION=latest DEPLOY_NAMESPACE=default make generate

  local_dev:
    name: Local Development
    runs-on: ubuntu-latest
    steps:
      # Get values for cache paths to be used in later steps
      - id: go-cache-paths
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
          echo "GOCACHE=$(go env GOCACHE)" >> $GITHUB_ENV
          echo "GOMODCACHE=$(go env GOMODCACHE)" >> $GITHUB_ENV

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Fix dumb git issue
        run: |
          git config --global --add safe.directory ${PWD}

      # Cache go build cache, used to speedup go test
      - name: Go Build Cache
        uses: actions/cache@v3
        with:
          path: ${{ env.GOCACHE }}
          key: ${{ runner.os }}-localdev-go-build-${{ hashFiles('**/go.sum') }}

      # Cache go mod cache, used to speedup builds
      - name: Go Mod Cache
        uses: actions/cache@v3
        with:
          path: ${{ env.GOMODCACHE }}
          key: ${{ runner.os }}-localdev-go-mod-${{ hashFiles('**/go.sum') }}

      - name: pnpm Cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-localdev-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Setup local development environment
        timeout-minutes: 10
        run: |
          make develop || (make logs && exit 1)
          curl -k https://monetr.local
          make shutdown

  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Fix dumb git issue
        run: |
          git config --global --add safe.directory ${PWD}
      - name: Build
        run: make docs
      - uses: actions/upload-artifact@v3
        name: Upload Documentation As Artifact
        with:
          name: '${{ github.sha }}-docs'
          path: '${{ github.workspace }}/docs/out'
          retention-days: 7

  storybook:
    name: Storybook
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Fix dumb git issue
        run: |
          git config --global --add safe.directory ${PWD}
      - name: Build
        run: make storybook
      - uses: actions/upload-artifact@v3
        name: Upload Storybook As Artifact
        with:
          name: '${{ github.sha }}-storybook'
          path: '${{ github.workspace }}/build/stories/dist'
          retention-days: 7

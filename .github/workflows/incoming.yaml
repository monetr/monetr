name: PR

on:
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    container: ghcr.io/monetr/build-containers/debian:12.1
    steps:
      # Get values for cache paths to be used in later steps
      - id: go-cache-paths
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
          echo "GOCACHE=$(go env GOCACHE)" >> $GITHUB_ENV
          echo "GOMODCACHE=$(go env GOMODCACHE)" >> $GITHUB_ENV

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Fix dumb git issue
        run: |
          git config --global --add safe.directory ${PWD}

      # Cache go build cache, used to speedup go test
      - name: Go Build Cache
        uses: actions/cache@v3
        with:
          path: ${{ env.GOCACHE }}
          key: ${{ runner.os }}-go-build-${{ hashFiles('**/go.sum') }}

      # Cache go mod cache, used to speedup builds
      - name: Go Mod Cache
        uses: actions/cache@v3
        with:
          path: ${{ env.GOMODCACHE }}
          key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}

      - name: pnpm Cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Build
        run: |
          make monetr

  test:
    name: Test
    runs-on: ubuntu-latest
    container: ghcr.io/monetr/build-containers/debian:12.1
    env:
      MONETR_PG_ADDRESS: postgres
      MONETR_PG_PASSWORD: ""
      MONETR_PG_USERNAME: api-testing
      MONETR_PG_DATABASE: test-db
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
          POSTGRES_USER: api-testing
          POSTGRES_DB: test-db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      # Get values for cache paths to be used in later steps
      - id: go-cache-paths
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
          echo "GOCACHE=$(go env GOCACHE)" >> $GITHUB_ENV
          echo "GOMODCACHE=$(go env GOMODCACHE)" >> $GITHUB_ENV

      - uses: actions/checkout@v4
      - name: Fix dumb git issue
        run: |
          git config --global --add safe.directory ${PWD}

      # Cache go build cache, used to speedup go test
      - name: Go Build Cache
        uses: actions/cache@v3
        with:
          path: ${{ env.GOCACHE }}
          key: ${{ runner.os }}-go-build-${{ hashFiles('**/go.sum') }}

      # Cache go mod cache, used to speedup builds
      - name: Go Mod Cache
        uses: actions/cache@v3
        with:
          path: ${{ env.GOMODCACHE }}
          key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}

      - name: pnpm Cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Test
        run: |
          make test

  container:
    name: Container
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Build monetr container
        run: |
          git config --global --add safe.directory ${PWD}
          make container

  yaml:
    name: Kubernetes YAMLs
    runs-on: ubuntu-latest
    container: ghcr.io/monetr/build-containers/debian:12.1
    steps:
      - uses: actions/checkout@v4
      - name: Generate kubernetes yamls
        run: |
          git config --global --add safe.directory ${PWD}
          ENVIRONMENT=my.monetr.dev DEPLOY_VERSION=latest DEPLOY_NAMESPACE=default make generate

  local_dev:
    name: Local Development
    runs-on: ubuntu-latest
    steps:
      # Get values for cache paths to be used in later steps
      - id: go-cache-paths
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
          echo "GOCACHE=$(go env GOCACHE)" >> $GITHUB_ENV
          echo "GOMODCACHE=$(go env GOMODCACHE)" >> $GITHUB_ENV

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Fix dumb git issue
        run: |
          git config --global --add safe.directory ${PWD}

      # Cache go build cache, used to speedup go test
      - name: Go Build Cache
        uses: actions/cache@v3
        with:
          path: ${{ env.GOCACHE }}
          key: ${{ runner.os }}-localdev-go-build-${{ hashFiles('**/go.sum') }}

      # Cache go mod cache, used to speedup builds
      - name: Go Mod Cache
        uses: actions/cache@v3
        with:
          path: ${{ env.GOMODCACHE }}
          key: ${{ runner.os }}-localdev-go-mod-${{ hashFiles('**/go.sum') }}

      - name: pnpm Cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-localdev-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Setup local development environment
        timeout-minutes: 15
        run: |
          make develop || (make logs && exit 1)
          curl -k https://monetr.local
          make shutdown

  # build_binary:
  #   needs:
  #     - build_notice
  #     - build_ui
  #     - go_dependencies
  #   name: Build Binary
  #   runs-on: ubuntu-latest
  #   container: ghcr.io/monetr/build-containers/golang:1.19.4
  #   strategy:
  #     matrix:
  #       os:
  #         - linux
  #         - darwin
  #         - windows
  #       architecture:
  #         - amd64
  #         - arm64
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/cache@v3
  #       with:
  #         path: |
  #           ~/.cache/go-build
  #           ~/go/pkg/mod
  #           ${{ github.workspace }}/vendor
  #         key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
  #         restore-keys: |
  #           ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
  #           ${{ runner.os }}-go-
  #     - uses: actions/download-artifact@v3
  #       name: Download Compiled UI Artifacts
  #       with:
  #         name: '${{ github.sha }}-ui'
  #         ```path: '${{ github.workspace }}/pkg/ui/static/'
  #     - uses: actions/download-artifact@v3
  #       name: Download Third Party Notice Artifacts
  #       with:
  #         name: '${{ github.sha }}-notice'
  #         path: '${{ github.workspace }}/pkg/build/'
  #     - name: Build
  #       run: |
  #         GOOS=${{ matrix.os }} GOARCH=${{ matrix.architecture }} make build
  #     - uses: actions/upload-artifact@v3
  #       with:
  #         name: '${{ github.sha }}-binary-${{ matrix.os }}-${{ matrix.architecture }}'
  #         path: |
  #           ${{ github.workspace }}/build/monetr
  #           ${{ github.workspace }}/build/monetr.exe
  #         if-no-files-found: ignore
  #         retention-days: 7

  # codecov:
  #   name: CodeCov
  #   needs:
  #     - go_test
  #     - ui_test
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/download-artifact@v3
  #       name: Download Go Coverage Artifacts
  #       with:
  #         name: '${{ github.sha }}-go-coverage'
  #         path: '${{ github.workspace }}/coverage'
  #     - uses: actions/download-artifact@v3
  #       name: Download UI Coverage Artifacts
  #       with:
  #         name: '${{ github.sha }}-ui-coverage'
  #         path: '${{ github.workspace }}/coverage'
  #     - name: CodeCov
  #       if: always()
  #       uses: codecov/codecov-action@v3
  #       with:
  #         files: '${{ github.workspace }}/coverage/clover.xml,${{ github.workspace }}/coverage/coverage.txt'
  #         name: monetr

  mkdocs:
    name: MkDocs
    runs-on: ubuntu-latest
    env:
      MKDOCS_IMAGE: ghcr.io/monetr/mkdocs-material-insiders:10072023
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Fix dumb git issue
        run: |
          git config --global --add safe.directory ${PWD}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }} # Read only token.
      - name: Build
        # This sucks but container permissions are hard.
        run: sudo make docs
      - uses: actions/upload-artifact@v3
        name: Upload Documentation As Artifact
        with:
          name: '${{ github.sha }}-mkdocs'
          path: '${{ github.workspace }}/build/documentation'
          retention-days: 7

name: PR

on:
  pull_request:
    branches:
      - main

jobs:
  go_dependencies:
    name: Go Dependencies
    runs-on: ubuntu-latest
    container: golang:1.19.1
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
            ${{ github.workspace }}/vendor
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
            ${{ runner.os }}-go-
      - name: Dependencies
        run: make go-dependencies

  ui_dependencies:
    name: UI Dependencies
    runs-on: ubuntu-latest
    container: node:17.5.0
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/node_modules
          key: ${{ runner.os }}-ui-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-ui-${{ hashFiles('**/yarn.lock') }}
            ${{ runner.os }}-ui-
      - name: Dependencies
        run: make ui-dependencies

  local_dev:
    name: Local Development
    needs:
      - go_dependencies
      - ui_dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
            ${{ github.workspace }}/vendor
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
            ${{ runner.os }}-go-
      - uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/node_modules
          key: ${{ runner.os }}-ui-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-ui-${{ hashFiles('**/yarn.lock') }}
            ${{ runner.os }}-ui-
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Setup local development environment
        run: |
          make develop || (make logs && exit 1)
          curl http://monetr.local
          make shutdown

  build_ui:
    needs:
      - ui_dependencies
    name: Build UI
    runs-on: ubuntu-latest
    container: node:17.5.0
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/node_modules
          key: ${{ runner.os }}-ui-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-ui-${{ hashFiles('**/yarn.lock') }}
            ${{ runner.os }}-ui-
      - name: Build
        run: make build-ui
      - uses: actions/upload-artifact@v3
        with:
          name: '${{ github.sha }}-ui'
          path: '${{ github.workspace }}/pkg/ui/static/'
          retention-days: 7

  build_binary:
    needs:
      - go_dependencies
      - build_ui
    name: Build Binary
    runs-on: ubuntu-latest
    container: ghcr.io/monetr/build-containers/golang:1.19.1
    strategy:
      matrix:
        architecture:
          - amd64
          - arm64
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
            ${{ github.workspace }}/vendor
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
            ${{ runner.os }}-go-
      - uses: actions/download-artifact@v3
        name: Download Compiled UI Artifacts
        with:
          name: '${{ github.sha }}-ui'
          path: '${{ github.workspace }}/pkg/ui/static/'
      - name: Build
        run: GOARCH=${{ matrix.architecture }} make build
      - uses: actions/upload-artifact@v3
        with:
          name: '${{ github.sha }}-binary-${{ matrix.architecture }}'
          path: '${{ github.workspace }}/build/monetr'
          retention-days: 7

  go_test:
    needs:
      - go_dependencies
    name: Test Go
    runs-on: ubuntu-latest
    container: golang:1.19.1
    env:
      POSTGRES_HOST: postgres
      POSTGRES_PASSWORD: ""
      POSTGRES_USER: api-testing
      POSTGRES_DB: test-db
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
          POSTGRES_USER: api-testing
          POSTGRES_DB: test-db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
            ${{ github.workspace }}/vendor
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
            ${{ runner.os }}-go-
      - name: Test
        run: make test-go
      - name: Annotate tests
        if: always()
        uses: guyarb/golang-test-annotations@v0.5.1
        with:
          test-results: '${{ github.workspace }}/rest-api-tests.json'
      - uses: actions/upload-artifact@v3
        name: Upload Go Test Coverage Artifacts
        if: always()
        with:
          name: '${{ github.sha }}-go-coverage'
          path: '${{ github.workspace }}/coverage.txt'
          retention-days: 1

  ui_test:
    needs:
      - ui_dependencies
    name: Test UI
    runs-on: ubuntu-latest
    container: node:17.5.0
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/node_modules
          key: ${{ runner.os }}-ui-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-ui-${{ hashFiles('**/yarn.lock') }}
            ${{ runner.os }}-ui-
      - name: Test
        run: make test-ui
      - uses: actions/upload-artifact@v3
        name: Upload UI Test Coverage Artifacts
        if: always()
        with:
          name: '${{ github.sha }}-ui-coverage'
          path: '${{ github.workspace }}/coverage/clover.xml'
          retention-days: 1

  codecov:
    name: CodeCov
    needs:
      - go_test
      - ui_test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        name: Download Go Coverage Artifacts
        with:
          name: '${{ github.sha }}-go-coverage'
          path: '${{ github.workspace }}/coverage'
      - uses: actions/download-artifact@v3
        name: Download UI Coverage Artifacts
        with:
          name: '${{ github.sha }}-ui-coverage'
          path: '${{ github.workspace }}/coverage'
      - name: CodeCov
        if: always()
        uses: codecov/codecov-action@v3
        with:
          files: '${{ github.workspace }}/coverage/clover.xml,${{ github.workspace }}/coverage/coverage.txt'
          name: monetr

  mkdocs:
    name: MkDocs
    runs-on: ubuntu-latest
    env:
      MKDOCS_IMAGE: ghcr.io/monetr/mkdocs-material-insiders:04052022
    steps:
      - uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }} # Read only token.
      - name: Build
        run: make mkdocs
      - uses: actions/upload-artifact@v3
        name: Upload Documentation As Artifact
        with:
          name: '${{ github.sha }}-mkdocs'
          path: '${{ github.workspace }}/build/site'
          retention-days: 7

  buildah:
    needs:
      - "ui_dependencies"
      - "build_ui"
    name: Container (Buildah)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        name: Download Compiled UI Artifacts
        with:
          name: '${{ github.sha }}-ui'
          path: '${{ github.workspace }}/pkg/ui/static/'
      - name: Build
        run: |
          sudo apt-get update && sudo apt-get -y install qemu-user-static
          make container

  docker:
    needs:
      - "ui_dependencies"
      - "build_ui"
    name: Container (Docker)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        name: Download Compiled UI Artifacts
        with:
          name: '${{ github.sha }}-ui'
          path: '${{ github.workspace }}/pkg/ui/static/'
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build
        run: make container ENGINE=docker

{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"],"fields":{"title":{"boost":1000.0},"text":{"boost":1.0},"tags":{"boost":1000000.0}}},"docs":[{"location":"contact/","title":"Contact monetr","text":"<p>Below are the preferred ways for contacting monetr staff.</p>"},{"location":"contact/#github-githubcommonetr","title":"GitHub: github.com/monetr","text":""},{"location":"contact/#email-supportmonetrapp","title":"Email: support@monetr.app","text":""},{"location":"contact/#discord-discord-server","title":"Discord: Discord Server","text":""},{"location":"contact/#phone-651-243-0035","title":"Phone: (651) 243-0035","text":""},{"location":"contact/#note","title":"Note","text":"<p>The easiest way to get in contact with someone for support is via GitHub, Email or Discord. You are welcome to call  our phone number, but at the moment we will not answer and would call you back at a later time.</p> <p>If your inquiry involves sensitive or personal information, please contact us directly via phone or email. Do not  disclose personal or sensitive information in any public channels.</p>"},{"location":"developing/","title":"Contributing to monetr","text":"<p>We want to make it as easy as possible for monetr users to become contributors. This documentation is still very much a work in progress, but as time goes on it will hopefully become a helpful guide to building out features or fixing problems within monetr.</p> <ul> <li> <p> Development</p> <p>Fixing bugs, adding features, reviewing code.</p> <p> Getting started</p> </li> <li> <p> Documentation</p> <p>Contribute to documentation to help others.    </p> <p> Getting started</p> </li> </ul>"},{"location":"developing/CODE_OF_CONDUCT/","title":"Contributor Covenant Code of Conduct","text":""},{"location":"developing/CODE_OF_CONDUCT/#our-pledge","title":"Our Pledge","text":"<p>We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.</p> <p>We pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.</p>"},{"location":"developing/CODE_OF_CONDUCT/#our-standards","title":"Our Standards","text":"<p>Examples of behavior that contributes to a positive environment for our community include:</p> <ul> <li>Demonstrating empathy and kindness toward other people</li> <li>Being respectful of differing opinions, viewpoints, and experiences</li> <li>Giving and gracefully accepting constructive feedback</li> <li>Accepting responsibility and apologizing to those affected by our mistakes, and learning from the experience</li> <li>Focusing on what is best not just for us as individuals, but for the overall community</li> </ul> <p>Examples of unacceptable behavior include:</p> <ul> <li>The use of sexualized language or imagery, and sexual attention or advances of any kind</li> <li>Trolling, insulting or derogatory comments, and personal or political attacks</li> <li>Public or private harassment</li> <li>Publishing others' private information, such as a physical or email address, without their explicit permission</li> <li>Other conduct which could reasonably be considered inappropriate in a professional setting</li> </ul>"},{"location":"developing/CODE_OF_CONDUCT/#enforcement-responsibilities","title":"Enforcement Responsibilities","text":"<p>Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful.</p> <p>Community leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate.</p>"},{"location":"developing/CODE_OF_CONDUCT/#scope","title":"Scope","text":"<p>This Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event.</p>"},{"location":"developing/CODE_OF_CONDUCT/#enforcement","title":"Enforcement","text":"<p>Instances of abusive, harassing, or otherwise unacceptable behavior may be reported to the community leaders responsible for enforcement at conduct@monetr.app. All complaints will be reviewed and investigated promptly and fairly.</p> <p>All community leaders are obligated to respect the privacy and security of the reporter of any incident.</p>"},{"location":"developing/CODE_OF_CONDUCT/#enforcement-guidelines","title":"Enforcement Guidelines","text":"<p>Community leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:</p>"},{"location":"developing/CODE_OF_CONDUCT/#1-correction","title":"1. Correction","text":"<p>Community Impact: Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community.</p> <p>Consequence: A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested.</p>"},{"location":"developing/CODE_OF_CONDUCT/#2-warning","title":"2. Warning","text":"<p>Community Impact: A violation through a single incident or series of actions.</p> <p>Consequence: A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban.</p>"},{"location":"developing/CODE_OF_CONDUCT/#3-temporary-ban","title":"3. Temporary Ban","text":"<p>Community Impact: A serious violation of community standards, including sustained inappropriate behavior.</p> <p>Consequence: A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.</p>"},{"location":"developing/CODE_OF_CONDUCT/#4-permanent-ban","title":"4. Permanent Ban","text":"<p>Community Impact: Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals.</p> <p>Consequence: A permanent ban from any sort of public interaction within the community.</p>"},{"location":"developing/CODE_OF_CONDUCT/#attribution","title":"Attribution","text":"<p>This Code of Conduct is adapted from the Contributor Covenant, version 2.0, available at https://www.contributor-covenant.org/version/2/0/code_of_conduct.html.</p> <p>Community Impact Guidelines were inspired by Mozilla's code of conduct enforcement ladder.</p> <p>For answers to common questions about this code of conduct, see the FAQ at https://www.contributor-covenant.org/faq. Translations are available at https://www.contributor-covenant.org/translations.</p>"},{"location":"developing/credentials/","title":"3rd Party API credentials for development","text":"<p>To work on all of the features monetr provides locally, you will need access to several sets of API credentials. These credentials are outlines here in order of significance. monetr or people representing monetr will not provide any of these credentials to you. You are responsible for gaining access to these credentials on your own. None of the credentials require that you pay for them for development purposes.</p>"},{"location":"developing/credentials/#plaid","title":"Plaid","text":"<p>Plaid credentials are required for local development at this time. Until manual accounts are fully supported, only live bank accounts can be used for budgeting within monetr. It is recommended to use Sandbox credentials from Plaid for local development. The \"development\" credentials (as Plaid designates them) are for live bank accounts, however they can only be used a limited number of times.</p> <ol> <li> <p>Start by creating a Plaid account at: Plaid Signup</p> </li> <li> <p>Fill out the form to the best of your abilities. Please do not use <code>monetr</code> for the company name.</p> </li> <li> <p>Once you have created your Plaid account, you can find your credentials    here: Plaid Keys</p> </li> </ol> <p>For monetr you will need your <code>client_id</code> as well as your <code>sandbox</code> secret.</p>"},{"location":"developing/credentials/#oauth","title":"OAuth","text":"<p>TODO</p> <p></p>"},{"location":"developing/credentials/#ngrok","title":"ngrok","text":"<p>ngrok is used to test code for webhooks. It allows requests to be made to your local development instance from an external endpoint. You can use ngrok without an API key; however, the tunnels will only last a short amount of time, and the external endpoint will change each time. This might cause difficulty if you plan on working on webhook related features. It is recommended to sign up for the free plan of ngrok and use the API key they provide you.</p> <p>You can sign up for ngrok here: ngrok Sign Up</p>"},{"location":"developing/credentials/#stripe","title":"Stripe","text":"<p>If you want to work on billing related features, you can also provide Stripe credentials to the local development environment. It is required to provide ngrok credentials along-side Stripe for local development. You can sign up for a Stripe account here: Stripe Sign Up</p> <p>You will need two sets of keys to work with Stripe.</p> <ul> <li>A test mode Stripe secret key. (Not the public key)</li> <li>A webhook secret, configured for your ngrok endpoint and with the proper scopes selected.</li> </ul> <p>Once you have made a Stripe account you can follow this guide to retrieve your keys.</p>"},{"location":"developing/credentials/#secret-key","title":"Secret key","text":"<p>Navigate to your Stripe API Keys page within the dashboard. Make sure you are in \"Test mode\".</p> <p></p> <p>You will need to click <code>Reveal test key</code> in order to retrieve the API key.</p> <p></p>"},{"location":"developing/credentials/#webhook-secret","title":"Webhook secret","text":"<p>On the Stripe Webhooks page click <code>+ Add endpoint</code>.</p> <p></p> <p>Enter your ngrok base URL here with the suffix: <code>/api/stripe/webhook</code></p> <p>Then you can add events that you need to work with. At a minimum the following events should be added as monetr requires them.</p> Stripe Webhook Events<pre><code>checkout.session.completed\ncustomer.deleted\ncustomer.subscription.created\ncustomer.subscription.deleted\ncustomer.subscription.updated\n</code></pre> <p>Once the webhook endpoint has been created click <code>Reveal</code> under Signing Secret to retrieve the secret for the webhook endpoint.</p> <p></p>"},{"location":"developing/credentials/#recaptcha","title":"ReCAPTCHA","text":"<p>TODO</p> <p></p>"},{"location":"developing/credentials/#sentry","title":"Sentry","text":"<p>TODO</p> <p></p>"},{"location":"developing/credentials/#smtp","title":"SMTP","text":"<p>TODO</p> <p></p>"},{"location":"developing/credentials/#google-cloud-kms","title":"Google Cloud KMS","text":"<p>Google Cloud KMS support is currently being added to improve the security of storing encrypted secrets in monetr. Documentation to follow.</p> <p>TODO</p> <p></p>"},{"location":"developing/documentation/","title":"Documentation","text":"<p>This is an overview of ways to contribute to monetr's documentation. To get started:</p> <ul> <li>You can find outstanding issues for documentation   here: </li> <li>If you don't find an issue that you'd be interested in working on, you can still create a pull request with your   desired changes.</li> <li>If you have found a gap in our documentation that you aren't able to, or do not wish to fill yourself; please create   an issue so that others are aware of this gap, and it can be addressed.</li> </ul>"},{"location":"developing/documentation/#editing-documentation","title":"Editing documentation","text":"<p>All of our documentation is in the form of Markdown files in the <code>docs</code> directory of the monetr repository. You can simply edit the existing files to make changes to the documentation. The documentation site is automatically generated in our GitHub Actions workflows.</p>"},{"location":"developing/documentation/#building-locally","title":"Building Locally","text":"<p>You can build our documentation site locally using the following command, but it does require a Docker runtime to be available.</p> Shell<pre><code>make mkdocs\n</code></pre> <p>Our documentation is built using the insider build of mkdocs-material but can still be built locally using the normal version of mkdocs-material. If you do have access to an insider container image, you can specify that image when you run the make command like this:</p> Shell<pre><code>make mkdocs MKDOCS_IMAGE=ghcr.io/yourusername/mkdocs-material-insiders:yourTag\n</code></pre>"},{"location":"developing/documentation/#editing-locally","title":"Editing Locally","text":"<p>If you want to work on the documentation in real time locally you can run the following command:</p> Linux/macOSWindows Shell<pre><code># Will start a local documentation server without the insiders build.\nmake develop-docs\n\n# If needed you can also specify a custom MKDOCS_IMAGE here too.\nmake develop-docs MKDOCS_IMAGE=ghcr.io/yourusername/mkdocs-material-insiders:yourTag\n</code></pre> Shell<pre><code># Will start a local documentation server without the insiders build.\ndocker compose -f docker-compose.documentation.yaml up\n\n# If you want to use a custom MKDOCS_IMAGE you can create a .env file and specify the path.\ndocker compose -f docker-compose.documentation.yaml up --env-file %PATH_TO_ENV_FILE%\n</code></pre> <p>This will use Docker Compose to start a container locally that has everything needed for the documentation to run. You can now edit any of the documentation files in the <code>docs/</code> directory and see changes refresh in your browser.</p> <p>When you exit the process it will also automatically stop the container. Running the typical <code>make clean</code> command will remove any stopped containers spawned by the documentation process.</p>"},{"location":"developing/documentation/#style","title":"Style","text":"<p>We would like our documentation to follow a general guide, this creates some consistency in how our documentation is both written, presented, and maintained over time.</p>"},{"location":"developing/documentation/#language","title":"Language","text":"<p>All documentation should be written in \"American\" English as much as possible. The exception to that rule are quotations, trademarks or terms that are better known by their own language's equivalent.</p>"},{"location":"developing/documentation/#reader-author","title":"Reader / Author","text":"<p>The documentation prefers \"we\" to address the author and \"you\" to address the reader. The gender of the reader shall be neutral if possible. Attempt to use \"they\" as a pronoun for the reader.</p>"},{"location":"developing/documentation/#code-blocks","title":"Code Blocks","text":"<p>Code blocks should always be accompanied by a preceding text to give context as to what that code block is, or represents. Adjacent code blocks without a paragraph of text between them should be avoided.</p>"},{"location":"developing/documentation/#screenshots","title":"Screenshots","text":"<p>Screenshots, if at all possible, should be no larger than <code>1280x720</code>. This is not a strict requirement, but if a screenshot can reasonably capture all the necessary details in that resolution or less; that is greatly preferred.</p>"},{"location":"developing/documentation/#links","title":"Links","text":"<p>Links to external sites should be opened in a new tab. This can be done by appending the following snippet after a link.</p> Open In New Tab<pre><code>{:target=\"_blank\"}\n</code></pre>"},{"location":"developing/documentation/#issue-tracking","title":"Issue Tracking","text":"<p>If documentation is missing and is planned to be added later. Please add a placeholder badge for that documentation using shields.io, with the <code>GitHub issue/pull request detail</code> shield.</p> <p>The \"override label\" should use the following format.</p> Label Format<pre><code>#{GitHub Issue Number} - {GitHub Issue Title}\n</code></pre> <p>Please make the badge link back to the original issue as well.</p>"},{"location":"developing/documentation/#inclusivity","title":"Inclusivity","text":"<p>Language that has been identified as hurtful or insensitive should be avoided.</p>"},{"location":"developing/github_actions/","title":"GitHub Actions Workflows","text":"<p>This document will serve as an overview of the CI/CD pipelines visible in GitHub.</p>"},{"location":"developing/local/","title":"Local Development","text":"<p>This guide walks you through setting up a local development environment for monetr on macOS or Linux. If you are using Windows, it is still possible to run the development environment locally. However, it is not documented at this time.</p>"},{"location":"developing/local/#prerequisites","title":"Prerequisites","text":"<p>At the time of writing this, monetr requires Plaid credentials for development. Among other credentials, documentation on how to retrieve them can be found here: Developing &gt; Credentials</p>"},{"location":"developing/local/#clone-the-repository","title":"Clone the repository","text":"<p>To get started, clone the monetr repository from GitHub or from your fork.</p> Shell<pre><code>git clone https://github.com/monetr/monetr.git\ncd monetr\n</code></pre> <p>The rest of the commands in this guide are issued from this directory.</p>"},{"location":"developing/local/#dependencies","title":"Dependencies","text":"<p>monetr's local development tries to not require anything to be installed on the developer's actual computer. Some tools must be installed though in order to prevent other tools being required. For the most part this is covered by Docker or another container engine. In the future we plan to fully support Podman as a local container engine as well as Docker, but at the moment Docker is recommended.</p>"},{"location":"developing/local/#mac-specific","title":"Mac Specific","text":"<p>macOS can ship with a version of <code>make</code> that is outdated. It is recommended that you use <code>brew</code> or any other preferred method to install the most recent version of GNUMake on your Mac. This will not break anything that is already using make, but will make sure that your version is compatible with the monetr Makefiles.</p> <p>For example; you should see something like this for your make version.</p> Shell<pre><code>make -v\n# GNU Make 4.3\n# Built for x86_64-apple-darwin20.1.0\n# Copyright (C) 1988-2020 Free Software Foundation, Inc.\n# License GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt;\n# This is free software: you are free to change and redistribute it.\n# There is NO WARRANTY, to the extent permitted by law.\n</code></pre>"},{"location":"developing/local/#required","title":"Required","text":"<p>The following tools are required in order to work on monetr locally.</p> <ul> <li>Docker</li> <li>Node (with <code>pnpm</code> installed)</li> <li>GNUMake</li> </ul> <p>These tools can be installed by running the following command.</p> Shell<pre><code>brew bundle --verbose\n</code></pre> <p>But they can also be installed manually through your own preferred methods. As long as <code>docker</code>, <code>make</code> and <code>yarn</code> are all available in your <code>PATH</code> variable, the rest of this guide should work just fine.</p>"},{"location":"developing/local/#configuration-credentials","title":"Configuration &amp; Credentials","text":"<p>At the moment monetr requires at least Plaid credentials in order to run properly, even for development. You can read more about obtaining these credentials here: Credentials</p> <p>The makefile will look for these development credentials and some configuration options in the following path:</p> monetr development env file<pre><code>$HOME/.monetr/development.env\n</code></pre> <p>You can create this file using the following commands:</p> Creating with the helper<pre><code>make settings\n</code></pre> <p>This will create the directory for you and seed the development environment file with a template for you to start with. It will also open the file created in your <code>$EDITOR</code>.</p> <p>You can also create the file manually like this:</p> Manually creating the development env file<pre><code>mkdir $HOME/.monetr\ntouch $HOME/.monetr/development.env\nvim $HOME/.monetr/development.env\n</code></pre> <p>Once you've opened this file you'll need to provide the Plaid Client ID as <code>PLAID_CLIENT_ID</code> and Plaid Client Secret as <code>PLAID_CLIENT_SECRET</code> here.</p>"},{"location":"developing/local/#starting-it-up","title":"Starting It Up","text":"<p>With the above requirements installed. You should be able to spin up the local development environment that runs inside of Docker compose.</p> <p>This command will also load any of the environment variables specified in the development env file (mentioned above) into the <code>monetr</code> container where the API is running.</p> Shell<pre><code>make develop\n</code></pre> <p>This will install node modules in the project's directory, as well as start up the containers needed for monetr to run locally. This command will exit automatically once all the containers are healthy. If you want to follow along while it is starting up you can use the <code>make logs</code> command in another terminal inside the project directory.</p>"},{"location":"developing/local/#working","title":"Working","text":"<p>Congratulations, you should now have monetr running locally on your computer. The <code>develop</code> task will print out some basic information for you. But if you missed it, you can access the development version of monetr at <code>http://monetr.local</code>.</p> <p>If you are working on documentation then that can be accessed at <code>http://monetr.local/documentation</code>.</p> <p>Almost all of monetr's code is setup to hot-reload as you make changes. The documentation, Go code and React UI will all automatically reload as changes are made. Changes to the Go code will not invoke a browser refresh of any sort though, so to observe a new behavior in the API you will need to refresh or make the API call again.</p> Note <p>If you want to disable hot reloading of the Go code, you can include <code>DISABLE_GO_RELOAD=true</code> in your env variables when you run <code>make develop</code>.</p>"},{"location":"developing/local/#debugging","title":"Debugging","text":"<p>The monetr container running the API has delve included. If you prefer to work using a step-debugger you can connect your editor to it. You will need to reconnect your editor each time it reloads, but it is very easy to make your changes and then hit debug and let your breakpoints be hit.</p> <p>Delve is available via port <code>2345</code> on <code>localhost</code>. I'm not sure what the configuration will be for every editor to connect to it; but this is a screenshot of IntellJ IDEA's configuration for remote debugging.</p> <p></p>"},{"location":"developing/local/#running-tests","title":"Running Tests","text":"<p>monetr requires a PostgreSQL instance to be available for Go tests to be run. At the moment there isn't a shorthand script to provision this instance. But an easy way to do so is this:</p> Shell<pre><code>docker run -e POSTGRES_HOST_AUTH_METHOD=trust --name postgres --rm -d -p 5432:5432 postgres:14\n</code></pre> <p>This will start a PostgreSQL instance in Docker (or remove an existing one) and make it available on <code>locahost:5432</code> as well as not require authentication. This makes it easy for tests to target it.</p> <p>If tests are run via <code>make</code> then nothing more needs to be done. However, if you want to run tests directly from your editor or other tools you will need to run the database migrations.</p> Shell<pre><code>make migrate\n</code></pre> <p>Will run all schema migrations on the PostgreSQL database on your localhost container.</p> <p>Tests can be run using the <code>go test</code> CLI, or all tests can be run using:</p> Shell<pre><code>make test\n</code></pre>"},{"location":"developing/local/#running-storybook","title":"Running Storybook","text":"<p>monetr now provides a storybook setup for working on UI components outside of running the entire application locally. To start storybook you can run the following command.</p> Shell<pre><code>make storybook\n</code></pre> <p>This will kick off the storybook server and build process. Once it is ready it will open the storybook in your default browser. You can then make changes to the components in the stories and see the changes in real time without needing to run the entire application stack locally.</p>"},{"location":"developing/local/#cleaning-up","title":"Cleaning Up","text":"<p>Once you have finished your work and you want to take the local development environment down you have a few options.</p>"},{"location":"developing/local/#stopping","title":"Stopping","text":"<p>Stopping allows you to keep the data you have in your development environment for later and come back to it. This can be helpful if you are working on a larger feature or bug. But overall it is recommended to completely wipe and re-provision your development environment each time you start working on something. This keeps the development environment tidy, but does have the downside of not introducing edge cases that might otherwise be harder to find. You can pause your development environment by running:</p> Shell<pre><code>make stop\n</code></pre> <p>This will stop all of the Docker containers that were started, but will not remove any of their data. When you are ready you can start the containers again with the following command.</p> Shell<pre><code>make start\n</code></pre>"},{"location":"developing/local/#shutting-down-development-environment","title":"Shutting Down Development Environment","text":"<p>If you want to completely shut everything down (1) then you can run the following command:</p> Danger <p>This will delete all of your local development data, including any Plaid links, expenses, goals, etc...</p> Shell<pre><code>make shutdown\n</code></pre> <p>This removes the Plaid links that are active, takes down the Docker compose containers, removes their volumes.</p>"},{"location":"developing/local/#completely-clean-up","title":"Completely Clean up","text":"<p>If you want to completely start fresh you can run the following make task. This will shut down the local development environment if it is running, but it will also delete any files created or generated during development. This deletes your <code>node_modules</code> folder, any submodules, and generated UI code.</p> Shell<pre><code>make clean\n</code></pre> <p>This should leave the project directory in a state similar to when it was initially cloned.</p>"},{"location":"developing/api/resources/","title":"REST API Resources","text":"<p>Available resources for the monetr REST API.</p> Resource Available endpoints Authentication <code>/api/authenication/login</code>, <code>/api/authentication/logout</code>, <code>/api/authentication/register</code> Bank Accounts <code>/api/bank_accounts</code> Funding Schedules <code>/api/bank_accounts/:bankAccountId/funding_schedules</code> Links <code>/api/links</code> Plaid Links <code>/api/plaid/token/new</code>, <code>/api/plaid/token/callback</code> Spending <code>/api/bank_accounts/:bankAccountId/spending</code> Transactions <code>/api/bank_accounts/:bankAccountId/transactions</code> User <code>/api/users/me</code>"},{"location":"developing/api/resources/account_settings/","title":"Account Settings","text":"<p>At the moment settings are an account level object.</p>"},{"location":"developing/api/resources/account_settings/#get-settings","title":"Get Settings","text":"<p>You can retrieve settings for the currently authenticated account using this endpoint.</p> HTTP<pre><code>GET /api/account/settings\n</code></pre>"},{"location":"developing/api/resources/account_settings/#response-body","title":"Response Body","text":"Attribute Type Required Description <code>maxSafeToSpend</code> object yes A sub-object outlining the settings for configuring a maxium allowed safe to spend per period between funding schedules. This feature has not been completely implemented"},{"location":"developing/api/resources/authentication/","title":"Authentication","text":"<p>Authentication resources for monetr's REST API.</p> <p>Authentication is primarily broken up into three objects. Logins, users, and accounts. Each of these objects are different from each other, but all of them are related. Logins are used to represent a single person's credentials for accessing monetr, as well as some of their basic information like their name. Users are a child object of logins, and a single login can have multiple users. Users are tied to a single account. Accounts are how all data is separated inside the application. When you create a Plaid Link or expenses, or other budgeting items. They are created at an account level. Your login tells us what users represent you, and those users tell us what accounts you have access to.</p> <pre><code>classDiagram\n    Login --&gt; \"many\" User : Can have\n    User \"1\" --&gt; \"1\" Account : Associated with\n    class Login{\n      +int loginId\n      +String email\n      +String firstName\n      +String lastName\n    }\n    class User{\n      +int userId\n      +int loginId\n      +int accountId\n    }\n    class Account{\n      +int accountId\n    }</code></pre> Note <p>At the moment logins are limited to a single user. This is a software constraint for now. The design to allow logins access to multiple users was to allow (in the future) people to have shared access to an account. Such as with a spouse.</p>"},{"location":"developing/api/resources/authentication/#login","title":"Login","text":"<p>Provide login credentials to authenticate a user. This API will not respond with a token in the body. It stores the token in an HTTP only cookie to prevent it from being accessible from Javascript code in the browser. If the credentials are valid then you will receive a <code>200 OK</code> status code in the response.</p> HTTP<pre><code>POST /api/authentication/login\n</code></pre>"},{"location":"developing/api/resources/authentication/#request-body","title":"Request Body","text":"Attribute Type Required Description <code>email</code> string yes The email address associated with the desired login. <code>password</code> string yes The login password. Passwords must be at least 8 characters. <code>captcha</code> string no * By default this field is not required, but if captcha is enabled then this field will be required. It should be the resulting value of a ReCAPTCHA challenge. <code>totp</code> string no Not yet fully implemented, but will be used to provide TOTP codes for the user during the authentication flow."},{"location":"developing/api/resources/authentication/#response-body","title":"Response Body","text":"Attribute Type Required Description <code>isActive</code> bool yes Used as an indicator for whether or not the current user's subscription is active. If billing is disabled this is always true. <code>nextUrl</code> string no If the API needs to direct a user to a certain path after authenticating, this field will be present. This is intended to be used for on-boarding or for billing flows. Note <p>When the request is successful the response body is pretty minimal. User details should be retrieved using a follow up request to Get Me</p>"},{"location":"developing/api/resources/authentication/#login-examples","title":"Login Examples","text":"Example Login Request<pre><code>curl --request POST \\\n--url \"https://my.monetr.app/api/authentication/login\" \\\n--header \"content-type: application/json\" \\\n--data '{\n    \"email\": \"email@example.com\",\n    \"password\": \"superSecureP@ssw0rd\"\n}'\n</code></pre>"},{"location":"developing/api/resources/authentication/#successful","title":"Successful","text":"<p>If the credentials provided are valid and there is nothing else to be done, then the response will simply be this.</p> 200 Ok<pre><code>{\n\"isActive\": true\n}\n</code></pre>"},{"location":"developing/api/resources/authentication/#subscription-is-not-active","title":"Subscription is not active","text":"<p>If the subscription for the authenticated user is not active (or if there is no subscription at all), then the response body will contain a path indicating to the UI what the next URL should be.</p> 200 Ok<pre><code>{\n\"isActive\": false,\n\"nextUrl\": \"/account/subscribe\"\n}\n</code></pre>"},{"location":"developing/api/resources/authentication/#login-errors","title":"Login Errors","text":""},{"location":"developing/api/resources/authentication/#invalid-credentials","title":"Invalid Credentials","text":"<p>If the credentials provided are not valid you will receive the following response body:</p> 401 Unauthorized<pre><code>{\n\"error\": \"invalid email and password\"\n}\n</code></pre>"},{"location":"developing/api/resources/authentication/#email-is-not-verified","title":"Email is not verified","text":"<p>If email verification is required by the server, then it is possible to get a login failure response even with valid credentials. If the credentials provided are valid, but the login's email is not verified yet; then you will receive the following response.</p> 428 Precondition Required<pre><code>{\n\"error\": \"email address is not verified\",\n\"code\": \"EMAIL_NOT_VERIFIED\"\n}\n</code></pre>"},{"location":"developing/api/resources/authentication/#mfa-is-required","title":"MFA is required","text":"<p>That is not the only error that can result in a <code>428</code> status code, if the user requires MFA you will receive the same status code upon providing valid credentials. But the code in the error body will be different and represent what action needs to be taken by the user.</p> 428 Precondition Required<pre><code>{\n\"error\": \"login requires MFA\",\n\"code\": \"MFA_REQUIRED\"\n}\n</code></pre>"},{"location":"developing/api/resources/authentication/#logout","title":"Logout","text":"<p>Because cookies are HTTP only, there is no way to remove the cookies from our UI code. Instead, we have a logout endpoint that removes the cookies.</p> HTTP<pre><code>GET /api/authentication/logout\n</code></pre>"},{"location":"developing/api/resources/authentication/#logout-examples","title":"Logout Examples","text":"Example Login Request<pre><code>curl --request GET \\\n--url \"https://my.monetr.app/api/authentication/logout\"\n</code></pre> <p>Logout does not return an error if the cookie is not present, it will always return a <code>200</code> status code with an empty response body.</p>"},{"location":"developing/api/resources/authentication/#register","title":"Register","text":"<p>New users can register for monetr using this endpoint. It can be configured to require ReCAPTCHA to reduce the likelihood that the endpoint will be spammed. Even in self-hosted deployments, it will require a valid email address is used. <sup>1</sup> Registering will create a new login, user, and account using the provided details.</p> <p>If billing is enabled on the server, your email address will be used to create a Stripe customer. Stripe is used to manage subscriptions and this way Stripe has a way to contact you or vice versa if needed.</p> HTTP<pre><code>POST /api/authentication/register\n</code></pre>"},{"location":"developing/api/resources/authentication/#request-body_1","title":"Request Body","text":"Attribute Type Required Description <code>email</code> string yes The email address associated with the desired login. <code>password</code> string yes The login password. Passwords must be at least 8 characters. Leading and trailing spaces are trimmed from the password. <code>firstName</code> string yes By default this field is not required, but if captcha is enabled then this field will be required. It should be the resulting value of a ReCAPTCHA challenge. <code>lastName</code> string yes Not yet fully implemented, but will be used to provide TOTP codes for the user during the authentication flow. <code>timezone</code> string yes The timezone you want your account to be configured for. <code>captcha</code> string no * Can be required if ReCAPTCHA is enabled on the server. <code>betaCode</code> string no * Can be required if the server requires an access code to create an account. <code>agree</code> bool yes Used to denote that the user has agreed to the terms of use for monetr."},{"location":"developing/api/resources/authentication/#response-body_1","title":"Response Body","text":"Attribute Type Required Description <code>message</code> string no If the user needs to verify their email then this will contain a message that can be presented to the user. <code>requireVerification</code> bool yes If the server requires that the login's email is verified, the fields below this will be omitted in the response body and this will be true. If this is false then the user does not need to verify their email. <code>nextUrl</code> string no If the API requires that the user take some on-boarding action, such as setting up a subscription. There will be a path provided here for the user to be redirected to. <code>user</code> User no If email verification is not required by the server then the newly created user object will be present in the response. <code>isActive</code> bool no Indicated whether or not the user is active, for servers that require billing this will be false initially."},{"location":"developing/api/resources/authentication/#register-examples","title":"Register Examples","text":"Example Register Request<pre><code>curl --request POST \\\n--url \"https://my.monetr.app/api/authentication/register\" \\\n--header \"content-type: application/json\" \\\n--data '{\n    \"email\": \"email@example.com\",\n    \"password\": \"superSecureP@ssw0rd\",\n    \"firstName\": \"Elliot\",\n    \"lastName\": \"Courant\",\n    \"timezone\": \"America/Chicago\",\n    \"agree\": true\n}'\n</code></pre>"},{"location":"developing/api/resources/authentication/#successful_1","title":"Successful","text":"<p>If the registration was successful and email verification is not necessary then you'll see a response body similar to the following.</p> 200 Ok<pre><code>{\n\"nextUrl\": \"/setup\",\n\"user\": {\n\"loginId\": 1234,\n\"accountId\": 1235,\n\"userId\": 1236,\n\"login\": {\n\"loginId\": 1234,\n\"firstName\": \"Elliot\",\n\"lastName\": \"Courant\",\n},\n\"account\": {\n\"accountId\": 1235,\n\"timezone\": \"America/Chicago\"\n}\n},\n\"isActive\": true,\n\"requireVerification\": false\n}\n</code></pre>"},{"location":"developing/api/resources/authentication/#email-verification-required","title":"Email verification required","text":"<p>If the registration succeeds, but we need to verify the login's email address.</p> 200 Ok<pre><code>{\n\"message\": \"A verification email has been sent to your email address, please verify your email.\",\n\"requireVerification\": true\n}\n</code></pre>"},{"location":"developing/api/resources/authentication/#email-already-exists","title":"Email already exists","text":"<p>If the provided email is already in use by someone else for monetr then you will receive a bad request response.</p> 400 Bad Request<pre><code>{\n\"error\": \"email already in use\",\n\"code\": \"EMAIL_IN_USE\"\n}\n</code></pre> <ol> <li> <p>Email addresses are not used to send people content unprompted. Email addresses provide a reliable way to assure uniqueness in users, as well as a way to contact them for things like billing and resetting forgotten passwords. For self-hosted deployments, it is not required that the email address used be one that can actually receive emails. However, this will limit your ability to easily reset forgotten passwords at this time.\u00a0\u21a9</p> </li> </ol>"},{"location":"developing/api/resources/bank_accounts/","title":"Bank Accounts","text":""},{"location":"developing/api/resources/funding_schedules/","title":"Funding Schedules","text":"<p>Funding schedules are used to tell monetr when to allocate funds to spending objects. They represent the frequency that you are paid; or the frequency that you would like to allocate funds to things you are budgeting for. Funding schedules are specific to a single bank account and must have a unique name within a bank account.</p>"},{"location":"developing/api/resources/funding_schedules/#list-funding-schedules","title":"List Funding Schedules","text":"<p>This endpoint does not support any pagination, it simply returns all of the funding schedules for the provided bank account Id.</p> HTTP<pre><code>GET /api/bank_accounts/{bankAccountId}/funding_schedules\n</code></pre>"},{"location":"developing/api/resources/funding_schedules/#request-path","title":"Request Path","text":"Attribute Type Required Description <code>bankAccountId</code> number yes The ID of the bank account the funding schedules belong to."},{"location":"developing/api/resources/funding_schedules/#response-body","title":"Response Body","text":"Attribute Type Required Description <code>fundingScheduleId</code> number yes The globally unique identifier for a funding schedule. <code>bankAccountId</code> number yes The bank account that this funding schedule belongs to, this will be the same as the <code>bankAccountId</code> provided in the URL path. <code>name</code> string yes The name of the funding schedule; this is unique per bank account. <code>description</code> string no If the funding schedule was created by the UI, then this will be a summary of the <code>rule</code> field in english. <code>rule</code> string yes The RRule provided when the funding schedule was created; representing how frequently this funding schedule will occur. <code>excludeWeekends</code> bool yes  If this is true, then the <code>nextOccurrence</code> will never fall on a weekend. If the <code>rule</code> would have it fall on a weekend, then the date is adjusted to be the previous Friday. <code>estimatedDeposit</code> number no  Estimated Deposit is going to be used to help calculate a free-to-use ahead of when someone would actually get paid. <code>nextOccurrence</code> datetime yes The next time this funding schedule will allocate funds to it's spending objects."},{"location":"developing/api/resources/funding_schedules/#list-funding-schedules-examples","title":"List Funding Schedules Examples","text":"Example List Funding Schedules Request<pre><code>curl --request GET \\\n--url \"https://my.monetr.app/api/bank_accounts/123/funding_schedules\"\n</code></pre>"},{"location":"developing/api/resources/funding_schedules/#successful","title":"Successful","text":"200 Ok<pre><code>[\n{\n\"fundingScheduleId\": 44,\n\"bankAccountId\": 123,\n\"name\": \"Payday\",\n\"description\": \"The 15th and the Last day of every month\",\n\"rule\": \"FREQ=MONTHLY;INTERVAL=1;BYMONTHDAY=15,-1\",\n\"excludeWeekends\": false,\n\"nextOccurrence\": \"2022-05-31T00:00:00-06:00\"\n}\n]\n</code></pre>"},{"location":"developing/api/resources/funding_schedules/#create-funding-schedule","title":"Create Funding Schedule","text":"<p>Create a funding schedule by providing some basic information about when the funding schedule will occur next as well as how frequently it occurs.</p> HTTP<pre><code>POST /api/bank_accounts/{bankAccountId}/funding_schedules\n</code></pre>"},{"location":"developing/api/resources/funding_schedules/#request-path_1","title":"Request Path","text":"Attribute Type Required Description <code>bankAccountId</code> number yes The ID of the bank account this new funding schedule should belong to."},{"location":"developing/api/resources/funding_schedules/#request-body","title":"Request Body","text":"Attribute Type Required Description <code>name</code> string yes The name of the new funding schedule. For a given <code>bankAccountId</code> this value must be unique. <code>rule</code> string yes The RRule representing how the funding schedule should occur. See RFC5545. Examples:  - The 15th and last day of every month: <code>FREQ=MONTHLY;INTERVAL=1;BYMONTHDAY=15,-1</code>  - Every other friday: <code>FREQ=WEEKLY;INTERVAL=2;BYDAY=FR</code>  - Every friday: <code>FREQ=WEEKLY;INTERVAL=1;BYDAY=FR</code> <code>description</code> string no The description of the funding schedule, this can be anything you want; but in the UI this is auto filled to be a string of the RRule. For example; <code>The 15th and Last day of every month</code> <code>excludeWeekends</code> bool no  Exclude weekends will adjust the occurrence dates if they were to fall on a weekend. It will set the date to be the closest previous business day. This will not impact the frequency of the funding schedule. <code>estimatedDeposit</code> number no  Estimated Deposit is going to be used to help calculate a free-to-use ahead of when someone would actually get paid. <code>nextOccurrence</code> datetime no You can provide the next occurrence date in the create request, this date will be used on subsequence recurrences to determine the following contribution dates. For rules that have static dates defined like the 15th and last day of the month, this will not affect subsequent recurrences. But for rules that can be more loose, like every other friday; this will determine which \"every other\" friday it is."},{"location":"developing/api/resources/funding_schedules/#response-body_1","title":"Response Body","text":"Attribute Type Required Description <code>fundingScheduleId</code> number yes The unique identifier for the funding schedule you created. This is globally unique within monetr. <code>bankAccountId</code> number yes This will be the value of the <code>bankAccountId</code> parameter you provided in the API path, and is included on <code>GET</code> requests as well. <code>name</code> string yes The name of the funding schedule provided by you, if there were leading or trailing spaces they will have been trimmed. <code>description</code> string no If a description was provided then it will be present here. <code>rule</code> string yes The RRule provided when the funding schedule was created. <code>excludeWeekends</code> bool yes If a value was provided in the create request, it will be present here; otherwise this will be <code>false</code>. <code>estimatedDeposit</code> number no  Estimated Deposit is going to be used to help calculate a safe-to-spend ahead of when someone would actually get paid. <code>nextOccurrence</code> datetime yes If you provided a date time and it was in the future, that will be used for the next occurrence. If one was not provided, then this value will be calculated using the <code>rule</code> field and the current timestamp."},{"location":"developing/api/resources/funding_schedules/#create-funding-schedule-examples","title":"Create Funding Schedule Examples","text":"Example Create Funding Schedule Request<pre><code>curl --request POST \\\n--url \"https://my.monetr.app/api/bank_accounts/123/funding_schedules\" \\\n--header \"content-type: application/json\" \\\n--data '{\n    \"name\": \"Payday\",\n    \"description\": \"The 15th and Last day of every month\",\n    \"rule\": \"FREQ=MONTHLY;INTERVAL=1;BYMONTHDAY=15,-1\",\n    \"excludeWeekends\": false,\n    \"nextOccurrence\": \"2022-05-31T00:00:00-06:00\"\n}'\n</code></pre>"},{"location":"developing/api/resources/funding_schedules/#successful_1","title":"Successful","text":"<p>If the funding schedule was created successfully, then you'll receive the created object back.</p> 200 Ok<pre><code>{\n\"fundingScheduleId\": 44,\n\"bankAccountId\": 123,\n\"name\": \"Payday\",\n\"description\": \"The 15th and the Last day of every month\",\n\"rule\": \"FREQ=MONTHLY;INTERVAL=1;BYMONTHDAY=15,-1\",\n\"excludeWeekends\": false,\n\"nextOccurrence\": \"2022-05-31T00:00:00-06:00\"\n}\n</code></pre>"},{"location":"developing/api/resources/funding_schedules/#update-funding-schedule","title":"Update Funding Schedule","text":"<p>A funding schedule can be updated after it has been created, this will allow people to change when they get paid or when they want to allocate funds to budgets. When updating a funding schedule it is recommended that you provide the entire funding schedule object. Some fields can be omitted but may result in those fields being unset. To avoid this it is best to retrieve the entire funding schedule via an API call, and then update the fields needed and send the updated object back using this API endpoint.</p> HTTP<pre><code>PUT /api/bank_accounts/{bankAccountId}/funding_schedules/{fundingScheduleId}\n</code></pre>"},{"location":"developing/api/resources/funding_schedules/#request-path_2","title":"Request Path","text":"Attribute Type Required Description <code>bankAccountId</code> number yes The ID of the bank account this funding schedule you are updating belongs to. <code>fundingScheduleId</code> number yes The ID of the funding schedule that you are updating."},{"location":"developing/api/resources/funding_schedules/#request-body_1","title":"Request Body","text":"Attribute Type Required Description <code>name</code> string yes The name of the new funding schedule. For a given <code>bankAccountId</code> this value must be unique. <code>rule</code> string yes The RRule representing how the funding schedule should occur. See RFC5545. Examples:  - The 15th and last day of every month: <code>FREQ=MONTHLY;INTERVAL=1;BYMONTHDAY=15,-1</code>  - Every other friday: <code>FREQ=WEEKLY;INTERVAL=2;BYDAY=FR</code>  - Every friday: <code>FREQ=WEEKLY;INTERVAL=1;BYDAY=FR</code> <code>description</code> string yes The description of the funding schedule, this can be anything you want; but in the UI this is auto filled to be a string of the RRule. For example; <code>The 15th and Last day of every month</code> <code>excludeWeekends</code> bool yes  Exclude weekends will adjust the occurrence dates if they were to fall on a weekend. It will set the date to be the closest previous business day. This will not impact the frequency of the funding schedule. <code>estimatedDeposit</code> number no  Estimated Deposit is going to be used to help calculate a free-to-use ahead of when someone would actually get paid. <code>nextOccurrence</code> datetime yes You can override the next time this funding schedule will be processed, if you do then the funding schedule will recur relative to this date going forward. This can be useful for adjusting a bi-weekly funding schedule to recur based on an alternate day of each week."},{"location":"developing/api/resources/funding_schedules/#response-body_2","title":"Response Body","text":"Attribute Type Required Description <code>fundingScheduleId</code> number yes The unique identifier for the funding schedule you updated. This is globally unique within monetr. <code>bankAccountId</code> number yes This will be the value of the <code>bankAccountId</code> parameter you provided in the API path, and is included on <code>GET</code> requests as well. <code>name</code> string yes The name of the funding schedule provided by you, if there were leading or trailing spaces they will have been trimmed. <code>description</code> string no If a description was provided then it will be present here. <code>rule</code> string yes The RRule used to calculate recurrences. <code>excludeWeekends</code> bool yes Whether or not this funding schedule will exclude weekends from its recurrence. <code>estimatedDeposit</code> number no  Estimated Deposit is going to be used to help calculate a free-to-use ahead of when someone would actually get paid. <code>nextOccurrence</code> datetime yes The next time this funding schedule will be processed."},{"location":"developing/api/resources/funding_schedules/#update-funding-schedule-examples","title":"Update Funding Schedule Examples","text":"Example Update Funding Schedule Request<pre><code>curl --request PUT \\\n--url \"https://my.monetr.app/api/bank_accounts/123/funding_schedules/456\" \\\n--header \"content-type: application/json\" \\\n--data '{\n    \"name\": \"Payday (Old)\",\n    \"description\": \"The 15th and Last day of every month\",\n    \"rule\": \"FREQ=MONTHLY;INTERVAL=1;BYMONTHDAY=15,-1\",\n    \"excludeWeekends\": false,\n    \"nextOccurrence\": \"2022-05-31T00:00:00-06:00\"\n}'\n</code></pre>"},{"location":"developing/api/resources/funding_schedules/#successful_2","title":"Successful","text":"<p>If the funding schedule was updated successfully, then you'll receive the updated object back. Even if you only provided a few fields in the request you will receive the entire object in the response.</p> 200 Ok<pre><code>{\n\"fundingScheduleId\": 456,\n\"bankAccountId\": 123,\n\"name\": \"Payday (Old)\",\n\"description\": \"The 15th and the Last day of every month\",\n\"rule\": \"FREQ=MONTHLY;INTERVAL=1;BYMONTHDAY=15,-1\",\n\"excludeWeekends\": false,\n\"nextOccurrence\": \"2022-05-31T00:00:00-06:00\"\n}\n</code></pre>"},{"location":"developing/api/resources/funding_schedules/#delete-funding-schedule","title":"Delete Funding Schedule","text":"<p>Delete a funding schedule for a given bank account. This can only be done if there are no spending objects associated with the funding schedule you want to remove. This will simply return a <code>200 Ok</code> status code if it succeeds, there is no response body.</p> HTTP<pre><code>DELETE /api/bank_accounts/{bankAccountId}/funding_schedules/{fundingScheduleId}\n</code></pre>"},{"location":"developing/api/resources/funding_schedules/#request-path_3","title":"Request Path","text":"Attribute Type Required Description <code>bankAccountId</code> number yes The ID of the bank account the funding schedule belongs to. <code>fundingScheduleId</code> number yes The ID of the funding schedule you want to remove."},{"location":"developing/api/resources/funding_schedules/#delete-funding-schedule-example","title":"Delete Funding Schedule Example","text":"Example Delete Funding Schedule Request<pre><code>curl --request DELETE \\\n--url \"https://my.monetr.app/api/bank_accounts/123/funding_schedules/123\"\n</code></pre>"},{"location":"developing/api/resources/funding_schedules/#funding-schedule-does-not-exist","title":"Funding Schedule Does Not Exist","text":"<p>If you try to delete a funding schedule that does not exist, then you will receive the following error.</p> 404 Not Found<pre><code>{\n\"error\": \"cannot remove funding schedule, it does not exist\"\n}\n</code></pre>"},{"location":"developing/api/resources/institutions/","title":"Institutions","text":""},{"location":"developing/api/resources/links/","title":"Links","text":"<p>Links are used to represent a connection between monetr and Plaid (or potentially some other source of data for bank transactions and balances). But links can also be used to represent a manual budgeting \"area\". Links are either created automatically by following the Plaid workflow; or can be created manually using these API endpoints to do manual budgeting.</p>"},{"location":"developing/api/resources/links/#list-links","title":"List Links","text":"<p>This endpoint does not support any pagination, it simply returns all of the links associated with the currently authenticated account.</p> HTTP<pre><code>GET /api/links\n</code></pre>"},{"location":"developing/api/resources/links/#response-body","title":"Response Body","text":"Attribute Type Required Description <code>linkId</code> number yes The unique identifier for a given link within monetr. This is unique. <code>linkType</code> enum yes What type of link this is. - <code>0</code> Unknown (likely an error state) - <code>1</code> Plaid Link (managed) - <code>2</code> Manual Link <code>plaidInstitutionId</code> string no If the link is a Plaid link, then this will include Plaid's unique identifier for the institution it is assocaited with. This is used to retrieve basic institution information. It is <code>null</code> for manual links <code>linkStatus</code> enum yes The status of the link, for manual links this will always be <code>2</code>. - <code>0</code> Unknown (likely an error state) - <code>1</code> Pending (the link is currently being setup by the user, or waiting on Plaid data) - <code>2</code> Setup (the link is healthy and functioning normally) - <code>3</code> Error (something is wrong with the link that might require user interaction to resolve) - <code>4</code> Pending Expiration (the credentials for the link are going to expire and it needs to be reauthenticated)  - <code>5</code> Revoked (the user has revoked access to the bank via Plaid) <code>errorCode</code> string no If the link is an error state this will have an error code from Plaid, this is used to help decide what action needs to be taken to fix the link. <code>expirationDate</code> datetime no If the Plaid link can expire, then its expiration date will be stored here. After this date the link will need to be reauthenticated. <code>institutionName</code> string yes The name of the instituion or link. If this is a Plaid link then this will be the name of the bank assocaited with the link in Plaid. If this is a manual link then this will be the name given to the link at creation. <code>customInstitutionName</code> string no Plaid links cannot have their <code>institutionName</code> updated, but if the user wants a custom name for a Plaid link then this field will be used. <code>createdAt</code> datetime yes When this link was created. This will be in UTC. <code>createdByUserId</code> number yes The ID of the user who created the link. Links are \"owned\" by the user who creates them. Even if multiple people have access to the same account, a link is \"owned\" by the one who creates it. <code>updatedAt</code> datetime yes When this link was last updated. Note: This field might not be well maintained and should not be relied on, it may be deprecated in the future. <code>lastManualSync</code> datetime no The last time this link was \"manually\" triggered to sync. <code>lastSuccessfulUpdate</code> datetime no The last time this link successfully received new data from Plaid."},{"location":"developing/api/resources/links/#create-manual-link","title":"Create (Manual) Link","text":"<p>Manual links can be created witha a post request. But allow only a subset of the fields to be provided and managed by the client.</p>"},{"location":"developing/api/resources/links/#request-body","title":"Request Body","text":"Attribute Type Required Description <code>institutionName</code> string yes The name of the instituion or link. <code>customInstitutionName</code> string no Custom institution name for a link, this field may be subject to changes in behavior for manual links"},{"location":"developing/api/resources/links/#response-body_1","title":"Response Body","text":"Attribute Type Required Description <code>linkId</code> number yes The unique identifier for a given link within monetr. This is unique. <code>linkType</code> enum yes Will always be <code>2</code> for manual links. <code>linkStatus</code> enum yes The status of the link, for manual links this will always be <code>2</code>. <code>institutionName</code> string yes The name of the instituion or link. If this is a Plaid link then this will be the name of the bank assocaited with the link in Plaid. If this is a manual link then this will be the name given to the link at creation. <code>customInstitutionName</code> string no Plaid links cannot have their <code>institutionName</code> updated, but if the user wants a custom name for a Plaid link then this field will be used. <code>createdAt</code> datetime yes When this link was created. This will be in UTC. <code>createdByUserId</code> number yes The ID of the user who created the link. Links are \"owned\" by the user who creates them. Even if multiple people have access to the same account, a link is \"owned\" by the one who creates it. <code>updatedAt</code> datetime yes When this link was last updated. Note: This field might not be well maintained and should not be relied on, it may be deprecated in the future."},{"location":"developing/api/resources/links/#create-manual-link-example","title":"Create Manual Link Example","text":"Example Create Manual Link Request<pre><code>curl --request POST \\\n--url \"https://my.monetr.app/api/links\" \\\n--header \"content-type: application/json\" \\\n--data '{\n    \"institutionName\": \"My Manual Budgeting\"\n}'\n</code></pre>"},{"location":"developing/api/resources/plaid_links/","title":"Plaid Links","text":"<p>Plaid Links are supporting resources behind the normal Link resource. They provide a way to retrieve real transaction and balance data from a person's bank account using Plaid's API. These endpoints expose some basic functionality for interacting with Plaid Links through monetr's API rather than with Plaid directly.</p>"},{"location":"developing/api/resources/plaid_links/#new-plaid-link-token","title":"New Plaid Link Token","text":"<p>In order to connect a user's account with Plaid and thus their bank account, you need to create a link token. This token is then used by the Plaid SDK in the UI in order to provide an authentication flow for that user and their bank.</p> <p>Under the hood, monetr is making a call to Create Link Token.</p> HTTP<pre><code>GET /api/plaid/token/new\n</code></pre>"},{"location":"developing/api/resources/plaid_links/#request-query-parameters","title":"Request Query Parameters","text":"Attribute Type Required Description <code>use_cache</code> bool false If true then the endpoint will not try to create another link token if one has already been created for the current user and has not been completed. This is used to reduce the number of API calls made to Plaid. It is recommended to use <code>true</code> for this. The endpoint will never return a Link token that has already been used."},{"location":"developing/api/resources/plaid_links/#response-body","title":"Response Body","text":"Attribute Type Required Description <code>linkToken</code> string yes The link token created from Plaid, this can be used with the Plaid SDK to authenticate a user's bank account."},{"location":"developing/api/resources/plaid_links/#new-link-token-examples","title":"New Link Token Examples","text":"Example New Link Token Request<pre><code>curl --request GET \\\n--url \"https://my.monetr.app/api/plaid/token/new\"\n</code></pre>"},{"location":"developing/api/resources/plaid_links/#successful","title":"Successful","text":"<p>If the user has not reached their limit for links <sup>1</sup> then they will receive a link token in the response and nothing else.</p> 200 Ok<pre><code>{\n\"linkToken\": \"link-sandbox-af1a0311-da53-4636-b754-dd15cc058176\"\n}\n</code></pre>"},{"location":"developing/api/resources/plaid_links/#new-link-errors","title":"New Link Errors","text":""},{"location":"developing/api/resources/plaid_links/#link-limit-reached","title":"Link Limit Reached","text":"400 Bad Request<pre><code>{\n\"error\": \"max number of Plaid links already reached\"\n}\n</code></pre>"},{"location":"developing/api/resources/plaid_links/#plaid-api-failure-or-other-failure","title":"Plaid API failure or other failure","text":"500 Internal Server Error<pre><code>{\n\"error\": \"failed to create link token\"\n}\n</code></pre>"},{"location":"developing/api/resources/plaid_links/#plaid-token-callback","title":"Plaid Token Callback","text":"<p>Once the user has completed authenticating their bank account using the Plaid SDK, you will be given a <code>public_token</code>. This new token must be exchanged with Plaid's API in order to allow monetr to access the bank data. The bank account should not be considered linked until this token is successfully exchanged<sup>2</sup>.</p> Note <p> Self-Hosted</p> <p>If webhooks are not enabled on the monetr server, then a job to retrieve transactions from Plaid will immediately be kicked off once the token has successfully been exchanged. This job will only attempt to retrieve the last 7 days of transactions from Plaid.</p> HTTP<pre><code>POST /api/plaid/token/callback\n</code></pre>"},{"location":"developing/api/resources/plaid_links/#request-body","title":"Request Body","text":"Attribute Type Required Description <code>publicToken</code> string yes The <code>public_token</code> you received from the Plaid Link flow via the SDK. <code>institutionId</code> string yes The Plaid <code>institution_id</code>, the API will not return an error if this is not provided (TODO). But it is required in order for the API to function properly. <code>institutionName</code> string yes The name of the institution as provided by the Plaid SDK. This is used as the initial name for the link until the user decides to rename it. <code>accountIds</code> []string yes An array of Plaid bank account IDs, this should be the list of IDs that the user selected when they were going through the link process."},{"location":"developing/api/resources/plaid_links/#response-body_1","title":"Response Body","text":"Attribute Type Required Description <code>linkId</code> integer yes The ID of the newly created link for the Plaid connection. Attention <p>There is an additional field in the response body called <code>success</code>. This field is not present if the request fails and is only present if it succeeds. The status of the request is already indicated properly using the status code of the response. This field should not be used, it will be removed in the future. </p>"},{"location":"developing/api/resources/plaid_links/#plaid-token-callback-examples","title":"Plaid Token Callback Examples","text":"Example Plaid Token Callback Request<pre><code>curl --request POST \\\n--url \"https://my.monetr.app/api/plaid/token/callback\" \\\n--header \"content-type: application/json\" \\\n--data '{\n    \"publicToken\": \"public-sandbox-5c224a01-8314-4491-a06f-39e193d5cddc\",\n    \"institutionId\": \"ins_1\",\n    \"institutionName\": \"A Banks Name\",\n    \"accountIds\": [\n      \"BxBXxLj1m4HMXBm9WZZmCWVbPjX16EHwv99vp\",\n      \"lPNjeW1nR6CDn5okmGQ6hEpMo4lLNoSrzqDje\"\n    ]\n}'\n</code></pre>"},{"location":"developing/api/resources/plaid_links/#successful_1","title":"Successful","text":"<p>If monetr is able to exchange the public token successfully, then you will receive a successful response with the newly created Link ID (1). </p> <ol> <li>The Link ID is not a unique identifier for Plaid, it is monetr's internal unique identifier.</li> </ol> 200 Ok<pre><code>{\n\"linkId\": 1234\n}\n</code></pre>"},{"location":"developing/api/resources/plaid_links/#plaid-token-callback-errors","title":"Plaid Token Callback Errors","text":""},{"location":"developing/api/resources/plaid_links/#no-public-token-provided","title":"No public token provided","text":"<p>You must provide a public token to create a Plaid link, there is no other way to authenticate a bank account through Plaid.</p> 400 Bad Request<pre><code>{\n\"error\": \"must provide a public token\"\n}\n</code></pre>"},{"location":"developing/api/resources/plaid_links/#no-accounts-provided","title":"No accounts provided","text":"<p>If you do not provide any Plaid bank account IDs then the API will not attempt to exchange the provided public token.</p> 400 Bad Request<pre><code>{\n\"error\": \"must select at least one account\"\n}\n</code></pre>"},{"location":"developing/api/resources/plaid_links/#plaid-api-failure-or-other-failure_1","title":"Plaid API failure or other failure","text":"500 Internal Server Error<pre><code>{\n\"error\": \"failed to exchange token\"\n}\n</code></pre>"},{"location":"developing/api/resources/plaid_links/#update-plaid-link","title":"Update Plaid Link","text":"<p>Plaid links can be updated after they have been established. This can be used as a method of re-authenticating a link if it ends up in an error state (though sometimes a link can end up in an error state without indicating <sup>3</sup>). This can also be used as a way to add additional accounts to a link if those accounts were not originally granted access when the link was created.</p> HTTP<pre><code>PUT /api/plaid/link/update/{linkId}\n</code></pre>"},{"location":"developing/api/resources/plaid_links/#request-path-parameters","title":"Request Path Parameters","text":"Attribute Type Required Description <code>linkId</code> number yes A link ID must be provided in order to put that link into update mode. The link must also be a Plaid link, a manual link will result in a bad request."},{"location":"developing/api/resources/plaid_links/#request-query-parameters_1","title":"Request Query Parameters","text":"Attribute Type Required Description <code>update_account_selection</code> boolean no This parameter is used to specify whether you want to put this link into an update mode that will allow you to add/remove accounts that are visible to monetr. This will change the Plaid Link dialog behavior slightly when it is presented to the client."},{"location":"developing/api/resources/plaid_links/#update-link-examples","title":"Update Link Examples","text":"Example Update Link Request<pre><code>curl --request PUT \\\n--url \"https://my.monetr.app/api/plaid/link/update/123?update_account_selection=true\"\n</code></pre>"},{"location":"developing/api/resources/plaid_links/#successful_2","title":"Successful","text":"<p>If the link is able to be put into update mode, then a Link Token is returned to the client. This can then be used with the Plaid Link library to allow the user to update their account selection or re-authenticate their link with their bank.</p> 200 Ok<pre><code>{\n\"linkToken\": \"link-sandbox-af1a0311-da53-4636-b754-dd15cc058176\"\n}\n</code></pre>"},{"location":"developing/api/resources/plaid_links/#update-link-errors","title":"Update Link Errors","text":""},{"location":"developing/api/resources/plaid_links/#manual-link-update-requested","title":"Manual Link Update Requested","text":"400 Bad Request<pre><code>{\n\"error\": \"cannot update a non-Plaid link\"\n}\n</code></pre>"},{"location":"developing/api/resources/plaid_links/#manually-resync-plaid-link","title":"Manually Resync Plaid Link","text":"<p>Sometimes you might need to manually trigger a resync with Plaid; this can happen if there were issues where a webhook was not properly received. By triggering a manual resync, transactions for the last 14 days and balances for all bank accounts within the specified link will be checked.</p> <p>Links can be manually synced once every 30 minutes, an error will be returned if you try to resync a link too quickly.</p> Note <p>This will not send a \"sync\" request to Plaid. This will only retrieve data already available via Plaid's API and update monetr's data accordingly.</p> Attention <p>This will not sync any removed transactions at this time. This will be resolved in the future by using the Plaid sync changes API, which will allow us to see all changes over a given period of time. But at the moment this will not update removed transactions.</p> <p></p> HTTP<pre><code>POST /api/plaid/link/sync\n</code></pre>"},{"location":"developing/api/resources/plaid_links/#request-body_1","title":"Request Body","text":"Attribute Type Required Description <code>linkId</code> number yes The link ID that you want to manually resync. This must be a Plaid link that is in a status of <code>Setup</code> or <code>Error</code>. Other link statuses will result in a bad request."},{"location":"developing/api/resources/plaid_links/#manually-resync-examples","title":"Manually Resync Examples","text":"Example manual resync request<pre><code>curl --request POST \\\n--url \"https://my.monetr.app/api/plaid/link/sync\" \\\n--header \"content-type: application/json\" \\\n--data '{\n    \"linkId\": 1234\n}'\n</code></pre>"},{"location":"developing/api/resources/plaid_links/#successful_3","title":"Successful","text":"<p>If the manual sync is kicked off successfully, you will recieve a <code>202 Accepted</code> status code with no response body.</p>"},{"location":"developing/api/resources/plaid_links/#errors","title":"Errors","text":"<p>If the request fails then you will receive a JSON response body.</p>"},{"location":"developing/api/resources/plaid_links/#provided-link-does-not-exist","title":"Provided Link does not exist","text":"404 Not Found<pre><code>{\n\"error\": \"failed to retrieve link: record does not exist\"\n}\n</code></pre>"},{"location":"developing/api/resources/plaid_links/#link-is-not-a-plaid-link","title":"Link is not a Plaid link","text":"400 Bad Request<pre><code>{\n\"error\": \"cannot manually sync a non-Plaid link\"\n}\n</code></pre>"},{"location":"developing/api/resources/plaid_links/#link-is-not-in-a-valid-status","title":"Link is not in a valid status","text":"400 Bad Request<pre><code>{\n\"error\": \"link is not in a valid status, it cannot be manually synced\"\n}\n</code></pre>"},{"location":"developing/api/resources/plaid_links/#previous-manual-sync-was-too-recent","title":"Previous manual sync was too recent","text":"425 Too Early<pre><code>{\n\"error\": \"link has been manually synced too recently\"\n}\n</code></pre>"},{"location":"developing/api/resources/plaid_links/#failed-to-enqueue-sync-job","title":"Failed to enqueue sync job","text":"500 Internal Server Error<pre><code>{\n\"error\": \"failed to trigger manual sync\"\n}\n</code></pre> <ol> <li> <p>monetr can be configured to limit the number of links an account can have. This is for those using development credentials. If you intend to self-host monetr and let friends and/or family use it, it is recommended that you limit how many links someone can have to prevent someone from adding many links to their account and using up your limited number of development links.\u00a0\u21a9</p> </li> <li> <p>If you fully authenticate a bank account, but you never exchange the <code>public_token</code> for that authenticated bank account. It should not affect the number of accounts linked for development credentials.\u00a0\u21a9</p> </li> <li> <p>While working on monetr I had a link fail to receive any updates from Plaid/the bank. It still showed that it was in a healthy state though. It didn't require re-authentication but at the time putting the link through \"link update\" was ultimately what resolved it.\u00a0\u21a9</p> </li> </ol>"},{"location":"developing/api/resources/spending/","title":"Spending","text":""},{"location":"developing/api/resources/spending/#spending","title":"Spending","text":"<p>Spending objects are used to represent how the user wants to spend their money and how frequently they want to or need to spend it. Spending objects create an \"earmark\" against the available balance of the bank account they are associated with. This is then used to allow monetr to calculate an amount that is safe for the user to spend at any given time; while making sure they still have funds for their defined financial obligations.</p>"},{"location":"developing/api/resources/spending/#list-spending","title":"List Spending","text":"<p>This endpoint does not support any pagination, it simply returns all of the spending objects for the provided bank account ID.</p> HTTP<pre><code>GET /api/bank_accounts/{bankAccountId}/spending\n</code></pre>"},{"location":"developing/api/resources/spending/#request-path","title":"Request Path","text":"Attribute Type Required Description <code>bankAccountId</code> number yes The ID of the bank account the spending objects belong to."},{"location":"developing/api/resources/spending/#response-body","title":"Response Body","text":"Attribute Type Required Description <code>spendingId</code> number yes The unique identifier for a spending object within monetr. <code>bankAccountId</code> number yes The bank account that the spending object belongs to. This will match the path parameter for this API endpoint. <code>fundingScheduleId</code> number yes The ID of the funding schedule that is used to calculate contributions to the spending object. <code>name</code> string yes The name or title of the spending object, this must be unique within a bank account and <code>spendingType</code>. <code>description</code> string no The description for the spending object. <code>spendingType</code> enum yes The type of spending object this is.  - <code>0</code> Expense  - <code>1</code> Goal <code>targetAmount</code> number yes The amount of money (in cents) that this spending object needs at or before it's <code>nextRecurrence</code> date. <code>currentAmount</code> number yes The amount of money (in cents) that is allocated to this spending object. <code>usedAmount</code> number no This field is only used for Goals, it is used to keep track of how much has been spent from the goal. When a transaction is spent from a Goal it increments the <code>usedAmount</code> equal the the amount of the transaction or the <code>currentAmount</code> of the spending object, whichever is lesser. <code>recurrenceRule</code> string no The RRule used to calculate the due dates for a spending object, this is only present for Expenses. <code>lastRecurrence</code> datetime no The timestamp of the last time this spending object was due. This is not a reflection of the last time the spending object was used. <code>nextRecurrence</code> datetime yes The timestamp of the next time this spending object is due, for a Goal this is just the day you want to complete the Goal. For an expense this is the next time it will recur before it is recalculated. <code>nextContributionAmount</code> number yes The amount of money (in cents) that will be allocated to the <code>currentAmount</code> the next time the funding schedule is processed. <code>isBehind</code> boolean yes Spending objects can fall behind if there will not be a funding event before the <code>nextRecurrence</code> and the <code>currentAmount</code> is less than the <code>targetAmount</code>. <code>isPaused</code> boolean no Spending objects can be paused, when they are paused they will not be funded or updated automatically. <code>dateCreated</code> datetime yes The timestamp of when this spending object was created. <code>dateStarted</code> datetime yes The timestamp of the first instance of the recurrence or the goal date. This is used to recalculate subsequent recurrences of an expense accurately."},{"location":"developing/api/resources/spending/#create-spending","title":"Create Spending","text":"<p>To create a spending object (a goal or an expense at the moment) you can perform a POST request to the following endpoint.</p> HTTP<pre><code>POST /api/bank_accounts/{bankAccountId}/spending\n</code></pre>"},{"location":"developing/api/resources/spending/#request-path_1","title":"Request Path","text":"Attribute Type Required Description <code>bankAccountId</code> number yes The ID of the bank account the spending object should belong to once it is created."},{"location":"developing/api/resources/spending/#request-body","title":"Request Body","text":"Attribute Type Required Description <code>fundingScheduleId</code> number yes The ID of the funding schedule that is used to calculate contributions to the spending object. <code>name</code> string yes The name or title of the spending object, this must be unique within a bank account and <code>spendingType</code>. <code>description</code> string no The description for the spending object. <code>spendingType</code> enum yes The type of spending object this is.  - <code>0</code> Expense  - <code>1</code> Goal <code>targetAmount</code> number yes The amount of money (in cents) that this spending object needs at or before it's <code>nextRecurrence</code> date. <code>recurrenceRule</code> string no The RRule used to calculate the due dates for a spending object, this is only present for Expenses. <code>nextRecurrence</code> datetime yes The timestamp of the next time this spending object is due, for a Goal this is just the day you want to complete the Goal. For an expense this is the next time it will recur before it is recalculated."},{"location":"developing/api/resources/spending/#response-body_1","title":"Response Body","text":"Attribute Type Required Description <code>spendingId</code> number yes The unique identifier for a spending object within monetr. <code>bankAccountId</code> number yes The bank account that the spending object belongs to. This will match the path parameter for this API endpoint. <code>fundingScheduleId</code> number yes The ID of the funding schedule that is used to calculate contributions to the spending object. <code>name</code> string yes The name or title of the spending object, this must be unique within a bank account and <code>spendingType</code>. <code>description</code> string no The description for the spending object. <code>spendingType</code> enum yes The type of spending object this is.  - <code>0</code> Expense  - <code>1</code> Goal <code>targetAmount</code> number yes The amount of money (in cents) that this spending object needs at or before it's <code>nextRecurrence</code> date. <code>currentAmount</code> number yes The amount of money (in cents) that is allocated to this spending object. <code>usedAmount</code> number no This field is only used for Goals, it is used to keep track of how much has been spent from the goal. When a transaction is spent from a Goal it increments the <code>usedAmount</code> equal the the amount of the transaction or the <code>currentAmount</code> of the spending object, whichever is lesser. <code>recurrenceRule</code> string no The RRule used to calculate the due dates for a spending object, this is only present for Expenses. <code>lastRecurrence</code> datetime no The timestamp of the last time this spending object was due. This is not a reflection of the last time the spending object was used. <code>nextRecurrence</code> datetime yes The timestamp of the next time this spending object is due, for a Goal this is just the day you want to complete the Goal. For an expense this is the next time it will recur before it is recalculated. <code>nextContributionAmount</code> number yes The amount of money (in cents) that will be allocated to the <code>currentAmount</code> the next time the funding schedule is processed. <code>isBehind</code> boolean yes Spending objects can fall behind if there will not be a funding event before the <code>nextRecurrence</code> and the <code>currentAmount</code> is less than the <code>targetAmount</code>. <code>isPaused</code> boolean no Spending objects can be paused, when they are paused they will not be funded or updated automatically. <code>dateCreated</code> datetime yes The timestamp of when this spending object was created. <code>dateStarted</code> datetime yes The timestamp of the first instance of the recurrence or the goal date. This is used to recalculate subsequent recurrences of an expense accurately."},{"location":"developing/api/resources/transactions/","title":"Transactions","text":""},{"location":"developing/api/resources/user/","title":"User","text":"<p>User resources for monetr's REST API.</p>"},{"location":"developing/api/resources/user/#get-me-current-user","title":"Get Me (Current User)","text":"<p>Retrieve information about the currently authenticated user. In the UI this API endpoint is also used to determine if there is a currently authenticated user. Because authentication is stored in HTTP only cookies there is no way for the UI to see if the cookie is present, so upon bootstrapping it makes an API call to this endpoint to determine if there is an authenticated user.</p> HTTP<pre><code>GET /api/users/me\n</code></pre>"},{"location":"help/","title":"Help","text":"<p>This is monetr's help section, it contains documents on various areas of the monetr application. Some functionality will vary between self-hosted and the hosted versions of monetr. These differences are denoted using  to represent self-hosted specific features or scenarios, and  to designate hosted features.</p> Note <p>monetr is currently in beta, and is subject to significant changes. Help articles should be up to date, but screenshots might not be. If you notice things aren't quite right, please open an issue on our GitHub.</p>"},{"location":"help/onboarding/","title":"Getting Started","text":"<p>This article will walk you through signing up for monetr as well as getting the first few things set up.</p>"},{"location":"help/onboarding/#setting-up-your-subscription-hosted","title":"Setting up your subscription  (Hosted)","text":"<p>The hosted version of monetr does require a subscription; to that end we use  Stripe to manage these subscriptions. It allows us to offer our application to you without needing to store any payment information even partially in our own application. When you first sign in, you will be redirected to a payment portal inside of Stripe's application. The portal will look similar to this if it is your first time setting up a subscription.</p> <p></p> <p>To continue to the monetr app you will need to provide payment details here. If you want to provide them later you can use the \"back\" button in the upper left-hand corner to return to the monetr login screen.</p>"},{"location":"help/onboarding/#your-first-bank-account","title":"Your first bank account","text":"<p>Initially you won't have any bank accounts linked with monetr. In the future we do plan to support manual bank accounts which do not require a Plaid link at all. But at the moment we do require that Plaid is used to connect to a bank account to retrieve data.</p> <p></p> <p>When you first sign up for monetr you will be presented with an initial setup screen. You will be prompted to link a bank account using Plaid. For the easiest setup, we recommend linking the account that you use day-to-day. As this account will be the one with the most things to budget for. It's easier to add other accounts later once you have a good understanding of how the application works.</p> <p></p> <p>You can select your bank from the list in Plaid, or search for it using the search box at the top of the dialog. Once you have selected your bank you will be prompted for your bank account credentials.</p> Note <p>Plaid supports many banks through their service, and makes it easy for us to safely read basic information in a way  that is secure. Our connection to your bank account through Plaid is completely read-only. We cannot access your  funds, or any sensitive information about your bank account. We can see your account balance, and the transactions  for that account. But nothing else.</p> <p></p> <p>Once you have authenticated your bank, you will be given the option to select which accounts monetr will have access to. It is recommended to select your primary checking account as well as maybe a savings account if you wish to setup some goals for it.</p> <p></p> <p>Plaid will take a moment to perform the link, and you will be returned to monetr. It might take a few moments for monetr to load, it is pulling transaction data in the background from Plaid. Once it has completed you will be greeted with this screen.</p> <p></p> <p> You have successfully linked your first bank account with monetr, and you are ready to start planning!</p>"},{"location":"help/bank_accounts/","title":"Bank Accounts","text":"<p>Bank accounts are simply monetr's representation of a single bank account, usually a checking or savings account.</p>"},{"location":"help/bank_accounts/removing/","title":"Removing Bank Accounts","text":"<p>Bank accounts can be removed from monetr by going to the accounts screen via the sidebar.</p> <p></p> <p>To remove an account, select the  icon for the bank. A menu will appear with a few options.</p> <p></p> <p>Simply click <code>- Remove</code> to continue.</p> Danger <p>Removing a bank account that was created by linking with Plaid will remove that link as well. We will no longer be able to see information about that account through Plaid. It will also remove all data from our application for that bank account shortly after confirming its deletion. This includes any transactions, expenses, or goals created for any of the accounts for that bank. This data cannot be recovered.</p> <p>We will ask you to confirm that you want to remove your bank account. This action cannot be undone.</p> <p></p> <p>Bank accounts and their information are removed in the background. It will immediately be removed from the UI, but if you refresh your page shortly after removing it; you may still see it. However, it will disappear shortly thereafter.</p>"},{"location":"help/expenses/","title":"Expenses","text":"<p>Expenses are used to budget for things that happen on a regular basis. Like a subscription to your favorite  streaming service, or a weekly grocery run. Expenses happen on set intervals, so monetr will fund them ahead of when  you need to spend the money. Making sure that you will have enough when that expense is needed.</p>"},{"location":"help/expenses/#example","title":"Example","text":"<p>Lets say you get paid every other week on Friday. That means you're getting paid roughly twice a month on average.  If you have an expense that is due once a month. monetr will take half of that expense's cost out of each of your  checks and put it aside. This way the amount needed is ready the day its due, and the amount you budget for each  paycheck is consistent and predictable.</p>"},{"location":"help/expenses/#development","title":"Development","text":"<ul> <li>Spending API</li> </ul>"},{"location":"help/funding_schedules/","title":"Funding Schedules","text":"<p>Funding schedules are used to allocate funds to your expenses and goals when you get paid, or at a set interval that is convenient for you. Every time a funding schedule is processed, all the expenses and goals that are associated with that funding schedule will receive a contribution towards their target amount.</p>"},{"location":"help/funding_schedules/#example","title":"Example","text":"<p>If you want to budget every time you are paid, and you get paid every other friday. You can select the next friday you get paid when creating a funding schedule and select \"every other friday\" for the frequency. monetr will automatically keep track of the days you get paid going forward and will split up your budgets to take just a bit out of each paycheck so you're not covering a large expense all at once.</p>"},{"location":"help/funding_schedules/#the-funding-schedules-view","title":"The Funding Schedules View","text":"<p>The funding schedules view will show you all of the funding schedules for the currently selected bank account. As  well as the next day that funding schedule will be processed and contribute to your expenses and goals. It will also  show you the total dollar amount currently estimated to be contributed at that time.</p> <p></p>"},{"location":"help/funding_schedules/#guides","title":"Guides","text":"<ul> <li>Create a funding schedule</li> </ul>"},{"location":"help/funding_schedules/#development","title":"Development","text":"<ul> <li>Funding schedule API</li> </ul>"},{"location":"help/funding_schedules/adding/","title":"Adding A New Funding Schedule","text":"<p>When you initially connect monetr and Plaid you will not have any funding schedules created yet. You'll want to create a funding schedule to represent when you get paid. This will help monetr put aside funds for you each paycheck.</p> <p>Click Create A Funding Schedule to get started.</p> <p></p> <p>If you have already created a funding schedule and would like to add another one you can use the floating Plus  button in the bottom right-hand corner of the application.</p> <p></p> <p>A dialog should appear giving you a way to tell monetr about your funding schedule.</p> <p></p>"},{"location":"help/funding_schedules/adding/#steps","title":"Steps","text":"<p>The sections below outline each piece of information that monetr needs in order to make use of funding schedules for  your budgeting.</p>"},{"location":"help/funding_schedules/adding/#name","title":"Name","text":"<p>A funding schedule's name must be unique a single bank account. If you aren't sure what to name it, we recommend  something simple like <code>Payday</code>.</p> <p></p>"},{"location":"help/funding_schedules/adding/#next-contribution","title":"Next contribution","text":"<p>monetr needs to know when you get paid next for this funding schedule. But if you are trying to fund your budgets  outside your paycheck then this is really just the next time you want to contribute to your budgets.</p> <p></p> <p></p> <p>The date picker will default to tomorrow when you open it.</p>"},{"location":"help/funding_schedules/adding/#frequency","title":"Frequency","text":"<p>Once you have picked the next funding date, you need to tell monetr how often you get paid. Depending on the day you  select monetr will give you a few options. (If none of these match your pay frequency please let us know by  contacting us!)</p> <p></p>"},{"location":"help/funding_schedules/adding/#additional-options","title":"Additional Options","text":"<p>If your pay schedule is such that a \"pay day\" would land on a weekend, but the pay check would have been deposited the previous business day. (Example; you get paid on the 15th and last day of each month, but one of those days falls on  a Saturday. Instead, your check is deposited on the day prior on Friday.) You can enable Exclude Weekends which will correct the funding schedule to be the previous business day if the funding schedule falls on a weekend.</p> <p></p> Note <p>This is still an experimental feature, and while it has been tested there may be some oddities that we have not observed yet. If you run into any issues please reach out!</p>"},{"location":"help/funding_schedules/adding/#youre-done","title":"You're Done!","text":"<p>You should now have a funding schedule created .</p> <p></p>"},{"location":"help/links/","title":"Links","text":"<p>Links are used to represent a connection between monetr and a bank. Links encapsulate multiple  bank accounts.</p> <p>Links are primarily established via Plaid. But in the near future we want to  support adding manual links that would allow the user to create bank accounts and transactions manually without  requiring direct access to financial data via Plaid.</p>"},{"location":"help/links/#manual-links","title":"Manual Links","text":"<p>Manual links are currently in development, progress can be tracked here: feature: Manual Links</p>"},{"location":"help/links/#plaid-links","title":"Plaid Links","text":"<p>Links established via Plaid are managed automatically. As Plaid has more data available in the form of new  transactions or updated balances, monetr will be notified and reflect that. This is what currently drives all of  monetr's financial data for budgeting.</p> Info <p>If you have lost access to your monetr account, please contact support. If you want or need to revoke access to  your financial data that was accessed via Plaid. You can do so here: my.plaid.com</p>"},{"location":"help/links/link_statuses/","title":"Link Statuses","text":"<p>Links with external software can have a variety of statuses. Manual links typically only have a status of \"setup\"  and should always show as a green circle in the UI. But when a link relies on data flow from an integration in order  to keep monetr up to date, those links can sometimes fail or become degraded.</p>"},{"location":"help/links/link_statuses/#plaid-link-status","title":"Plaid Link Status","text":"<p>Plaid links can have a few different statuses. But the primary ones are as follows:</p> <ul> <li><code>Healthy</code>: monetr is receiving updates from Plaid, transaction and balance data might be a few hours delayed but     should generally be accurate.</li> <li><code>Degraded</code>: In the UI this will show as a yellow circle next to the Plaid icon. With a message   <code>Updates might be delayed</code>. Plaid is still sending data for this link, but data might be significantly delayed. It is   perfectly normal for links to go in and out of this status over time.</li> <li><code>Down</code>: The institution is unavailable via Plaid. This can happen if the bank themselves are having problems or if     Plaid is offline.</li> <li><code>Error</code>: Plaid is no longer sending monetr updates from your financial institution. This can happen for a variety    of reasons but is usually resolved by re-authenticating your link.</li> </ul> <p>If your link is missing transactions that are more than 2 days old and your link is not in a \"Down\" or \"Error\" state, please reach out to monetr support, so we may help resolve the issue.</p> <p>Note: Please do not remove a link in an attempt to resolve an issue with it. Removing links deletes all of the data  associated with it and can cause other side effects. Only remove a link if you have no intention of re-adding it.</p>"},{"location":"help/self_hosting/","title":"Self-Hosted monetr","text":""},{"location":"help/self_hosting/command_line/","title":"Command Line","text":"<p>monetr is built as a single executable. This executable contains both the UI and all of the code necessary to run  the API. This executable however has many command line tools built in to help make self-hosting monetr easier.</p> <p>This document will cover all the commands included with the monetr executable. But may not go into depth on of the more development focused commands.</p>"}]}
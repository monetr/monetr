(self.webpackChunk_monetr_stories=self.webpackChunk_monetr_stories||[]).push([["interface_src_pages_expense_details_stories_tsx~interface_src_pages_login_stories_tsx~interfa~7406e2"],{"../interface/src/pages/login.tsx":function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"default",{enumerable:!0,get:function(){return g}});var a=s("../node_modules/react/jsx-runtime.js");s("../node_modules/react/index.js");var r=s("../node_modules/notistack/notistack.esm.js"),n=s.ir(s("../interface/src/components/MButton.tsx")),i=s.ir(s("../interface/src/components/MCaptcha.tsx")),l=s.ir(s("../interface/src/components/MForm.tsx")),o=s.ir(s("../interface/src/components/MLink.tsx")),c=s.ir(s("../interface/src/components/MLogo.tsx")),d=s.ir(s("../interface/src/components/MSpan.tsx")),u=s.ir(s("../interface/src/components/MTextField.tsx")),m=s("../interface/src/hooks/useAppConfiguration.ts"),f=s.ir(s("../interface/src/hooks/useLogin.ts")),p=s.ir(s("../interface/src/util/verifyEmailAddress.ts"));let w={email:"",password:"",captcha:null};function x(e){let t={};return 0===e?.email.length&&(t.email="Email must be provided."),e?.email&&!(0,p.default)(e?.email)&&(t.email="Email must be valid."),e?.password.length<8&&(t.password="Password must be at least 8 characters long."),t}function g(){let{enqueueSnackbar:e}=(0,r.useSnackbar)(),t=(0,m.useAppConfiguration)(),s=(0,f.default)();async function p(t,a){return a.setSubmitting(!0),s({captcha:t.captcha,email:t.email,password:t.password}).catch(t=>e(t?.response?.data?.error||"Failed to authenticate.",{variant:"error",disableWindowBlurListener:!0})).finally(()=>a.setSubmitting(!1))}return(0,a.jsxs)(l.default,{initialValues:w,validate:x,onSubmit:p,className:"w-full h-full flex pt-10 md:pt-0 md:pb-10 md:justify-center items-center flex-col gap-1 px-5",children:[(0,a.jsx)("div",{className:"max-w-[128px] w-full",children:(0,a.jsx)(c.default,{})}),(0,a.jsx)(d.default,{children:"Sign into your monetr account"}),(0,a.jsx)(u.default,{"data-testid":"login-email",autoFocus:!0,label:"Email Address",name:"email",type:"email",required:!0,className:"w-full xl:w-1/5 lg:w-1/4 md:w-1/3 sm:w-1/2",tabIndex:1}),(0,a.jsx)(u.default,{autoComplete:"current-password",className:"w-full xl:w-1/5 lg:w-1/4 md:w-1/3 sm:w-1/2","data-testid":"login-password",label:"Password",labelDecorator:function(){return t?.allowForgotPassword?(0,a.jsx)(o.default,{to:"/password/forgot",size:"sm","data-testid":"login-forgot",tabIndex:5,children:"Forgot password?"}):null},name:"password",required:!0,type:"password",tabIndex:2}),(0,a.jsx)(i.default,{name:"captcha",show:!!t?.verifyLogin}),(0,a.jsx)("div",{className:"w-full xl:w-1/5 lg:w-1/4 md:w-1/3 sm:w-1/2 mt-1",children:(0,a.jsx)(n.default,{"data-testid":"login-submit",color:"primary",variant:"solid",role:"form",type:"submit",className:"w-full",tabIndex:3,children:"Sign In"})}),(0,a.jsx)(function(){return t?.allowSignUp?(0,a.jsxs)("div",{className:"w-full lg:w-1/4 sm:w-1/3 mt-1 flex justify-center gap-1",children:[(0,a.jsx)(d.default,{color:"subtle",className:"text-sm",children:"Not a user?"}),(0,a.jsx)(o.default,{to:"/register",size:"sm","data-testid":"login-signup",tabIndex:4,children:"Sign up now"})]}):null},{})]})}},"../interface/src/hooks/useLogin.ts":function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"default",{enumerable:!0,get:function(){return i}});var a=s("../node_modules/react-router-dom/dist/index.js"),r=s("../node_modules/@tanstack/react-query/build/lib/index.mjs"),n=s.ir(s("../interface/src/util/request.ts"));function i(){let e=(0,a.useNavigate)(),t=(0,r.useQueryClient)();return async s=>(0,n.default)().post("/authentication/login",s).then(async s=>t.invalidateQueries(["/users/me"]).then(()=>e(s?.data?.nextUrl||"/"))).catch(t=>{if(t?.response?.status===428)switch(t?.response?.data?.code){case"PASSWORD_CHANGE_REQUIRED":return e("/password/reset",{state:{message:"You are required to change your password before authenticating.",token:t?.response?.data?.resetToken}});case"MFA_REQUIRED":return e("/login/mfa",{state:{emailAddress:s.email,password:s.password}});case"EMAIL_NOT_VERIFIED":return e("/verify/email/resend",{state:{emailAddress:s.email}});default:break}throw t})}}}]);
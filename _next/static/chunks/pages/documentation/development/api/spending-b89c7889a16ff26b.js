(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[9569],{8356:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/documentation/development/api/spending",function(){return n(9747)}])},9747:function(e,t,n){"use strict";n.r(t),n.d(t,{__toc:function(){return r}});var d=n(4246),s=n(9304),i=n(1441);let r=[{depth:2,value:"List Spending",id:"list-spending"},{depth:3,value:"Request Path",id:"request-path"},{depth:3,value:"Response Body",id:"response-body"},{depth:2,value:"Create Spending",id:"create-spending"},{depth:3,value:"Request Path",id:"request-path-1"},{depth:3,value:"Request Body",id:"request-body"},{depth:3,value:"Response Body",id:"response-body-1"}];function _createMdxContent(e){let t=Object.assign({h1:"h1",p:"p",a:"a",h2:"h2",pre:"pre",code:"code",span:"span",h3:"h3",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td"},(0,i.a)(),e.components);return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(t.h1,{children:"Spending"}),"\n",(0,d.jsxs)(t.p,{children:["Spending objects are used to represent how the user wants to spend their money and how frequently they want to or need\nto spend it. Spending objects create an ",(0,d.jsx)(t.a,{href:"https://www.merriam-webster.com/dictionary/earmark",children:'"earmark"'})," against the\navailable balance of the bank account they are associated with. This is then used to allow monetr to calculate an amount\nthat is safe for the user to spend at any given time; while making sure they still have funds for their defined\nfinancial obligations."]}),"\n",(0,d.jsx)(t.h2,{id:"list-spending",children:"List Spending"}),"\n",(0,d.jsx)(t.p,{children:"This endpoint does not support any pagination, it simply returns all of the spending objects for the provided bank\naccount ID."}),"\n",(0,d.jsx)(t.pre,{"data-language":"http","data-theme":"default",filename:"HTTP",children:(0,d.jsx)(t.code,{"data-language":"http","data-theme":"default",children:(0,d.jsxs)(t.span,{className:"line",children:[(0,d.jsx)(t.span,{style:{color:"var(--shiki-token-keyword)"},children:"GET"}),(0,d.jsx)(t.span,{style:{color:"var(--shiki-color-text)"},children:" /api/bank_accounts/{bankAccountId}/spending"})]})})}),"\n",(0,d.jsx)(t.h3,{id:"request-path",children:"Request Path"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Attribute"}),(0,d.jsx)(t.th,{children:"Type"}),(0,d.jsx)(t.th,{children:"Required"}),(0,d.jsx)(t.th,{children:"Description"})]})}),(0,d.jsx)(t.tbody,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"bankAccountId"})}),(0,d.jsx)(t.td,{children:"number"}),(0,d.jsx)(t.td,{children:"yes"}),(0,d.jsx)(t.td,{children:"The ID of the bank account the spending objects belong to."})]})})]}),"\n",(0,d.jsx)(t.h3,{id:"response-body",children:"Response Body"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Attribute"}),(0,d.jsx)(t.th,{children:"Type"}),(0,d.jsx)(t.th,{children:"Required"}),(0,d.jsx)(t.th,{children:"Description"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"spendingId"})}),(0,d.jsx)(t.td,{children:"number"}),(0,d.jsx)(t.td,{children:"yes"}),(0,d.jsx)(t.td,{children:"The unique identifier for a spending object within monetr."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"bankAccountId"})}),(0,d.jsx)(t.td,{children:"number"}),(0,d.jsx)(t.td,{children:"yes"}),(0,d.jsx)(t.td,{children:"The bank account that the spending object belongs to. This will match the path parameter for this API endpoint."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"fundingScheduleId"})}),(0,d.jsx)(t.td,{children:"number"}),(0,d.jsx)(t.td,{children:"yes"}),(0,d.jsx)(t.td,{children:"The ID of the funding schedule that is used to calculate contributions to the spending object."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"name"})}),(0,d.jsx)(t.td,{children:"string"}),(0,d.jsx)(t.td,{children:"yes"}),(0,d.jsxs)(t.td,{children:["The name or title of the spending object, this must be unique within a bank account and ",(0,d.jsx)(t.code,{children:"spendingType"}),"."]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"description"})}),(0,d.jsx)(t.td,{children:"string"}),(0,d.jsx)(t.td,{children:"no"}),(0,d.jsx)(t.td,{children:"The description for the spending object."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"spendingType"})}),(0,d.jsx)(t.td,{children:"enum"}),(0,d.jsx)(t.td,{children:"yes"}),(0,d.jsxs)(t.td,{children:["The type of spending object this is. ",(0,d.jsx)("br",{})," - ",(0,d.jsx)(t.code,{children:"0"})," Expense ",(0,d.jsx)("br",{})," - ",(0,d.jsx)(t.code,{children:"1"})," Goal"]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"targetAmount"})}),(0,d.jsx)(t.td,{children:"number"}),(0,d.jsx)(t.td,{children:"yes"}),(0,d.jsxs)(t.td,{children:["The amount of money (in cents) that this spending object needs at or before it's ",(0,d.jsx)(t.code,{children:"nextRecurrence"})," date."]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"currentAmount"})}),(0,d.jsx)(t.td,{children:"number"}),(0,d.jsx)(t.td,{children:"yes"}),(0,d.jsx)(t.td,{children:"The amount of money (in cents) that is allocated to this spending object."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"usedAmount"})}),(0,d.jsx)(t.td,{children:"number"}),(0,d.jsx)(t.td,{children:"no"}),(0,d.jsxs)(t.td,{children:["This field is only used for Goals, it is used to keep track of how much has been spent from the goal. When a transaction is spent from a Goal it increments the ",(0,d.jsx)(t.code,{children:"usedAmount"})," equal the the amount of the transaction or the ",(0,d.jsx)(t.code,{children:"currentAmount"})," of the spending object, whichever is lesser."]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"recurrenceRule"})}),(0,d.jsx)(t.td,{children:"string"}),(0,d.jsx)(t.td,{children:"no"}),(0,d.jsx)(t.td,{children:"The RRule used to calculate the due dates for a spending object, this is only present for Expenses."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"lastRecurrence"})}),(0,d.jsx)(t.td,{children:"datetime"}),(0,d.jsx)(t.td,{children:"no"}),(0,d.jsx)(t.td,{children:"The timestamp of the last time this spending object was due. This is not a reflection of the last time the spending object was used."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"nextRecurrence"})}),(0,d.jsx)(t.td,{children:"datetime"}),(0,d.jsx)(t.td,{children:"yes"}),(0,d.jsx)(t.td,{children:"The timestamp of the next time this spending object is due, for a Goal this is just the day you want to complete the Goal. For an expense this is the next time it will recur before it is recalculated."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"nextContributionAmount"})}),(0,d.jsx)(t.td,{children:"number"}),(0,d.jsx)(t.td,{children:"yes"}),(0,d.jsxs)(t.td,{children:["The amount of money (in cents) that will be allocated to the ",(0,d.jsx)(t.code,{children:"currentAmount"})," the next time the funding schedule is processed."]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"isBehind"})}),(0,d.jsx)(t.td,{children:"boolean"}),(0,d.jsx)(t.td,{children:"yes"}),(0,d.jsxs)(t.td,{children:["Spending objects can fall behind if there will not be a funding event before the ",(0,d.jsx)(t.code,{children:"nextRecurrence"})," and the ",(0,d.jsx)(t.code,{children:"currentAmount"})," is less than the ",(0,d.jsx)(t.code,{children:"targetAmount"}),"."]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"isPaused"})}),(0,d.jsx)(t.td,{children:"boolean"}),(0,d.jsx)(t.td,{children:"no"}),(0,d.jsx)(t.td,{children:"Spending objects can be paused, when they are paused they will not be funded or updated automatically."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"dateCreated"})}),(0,d.jsx)(t.td,{children:"datetime"}),(0,d.jsx)(t.td,{children:"yes"}),(0,d.jsx)(t.td,{children:"The timestamp of when this spending object was created."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"dateStarted"})}),(0,d.jsx)(t.td,{children:"datetime"}),(0,d.jsx)(t.td,{children:"yes"}),(0,d.jsx)(t.td,{children:"The timestamp of the first instance of the recurrence or the goal date. This is used to recalculate subsequent recurrences of an expense accurately."})]})]})]}),"\n",(0,d.jsx)(t.h2,{id:"create-spending",children:"Create Spending"}),"\n",(0,d.jsx)(t.p,{children:"To create a spending object (a goal or an expense at the moment) you can perform a POST request to the following\nendpoint."}),"\n",(0,d.jsx)(t.pre,{"data-language":"http","data-theme":"default",filename:"HTTP",children:(0,d.jsx)(t.code,{"data-language":"http","data-theme":"default",children:(0,d.jsxs)(t.span,{className:"line",children:[(0,d.jsx)(t.span,{style:{color:"var(--shiki-token-keyword)"},children:"POST"}),(0,d.jsx)(t.span,{style:{color:"var(--shiki-color-text)"},children:" /api/bank_accounts/{bankAccountId}/spending"})]})})}),"\n",(0,d.jsx)(t.h3,{id:"request-path-1",children:"Request Path"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Attribute"}),(0,d.jsx)(t.th,{children:"Type"}),(0,d.jsx)(t.th,{children:"Required"}),(0,d.jsx)(t.th,{children:"Description"})]})}),(0,d.jsx)(t.tbody,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"bankAccountId"})}),(0,d.jsx)(t.td,{children:"number"}),(0,d.jsx)(t.td,{children:"yes"}),(0,d.jsx)(t.td,{children:"The ID of the bank account the spending object should belong to once it is created."})]})})]}),"\n",(0,d.jsx)(t.h3,{id:"request-body",children:"Request Body"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Attribute"}),(0,d.jsx)(t.th,{children:"Type"}),(0,d.jsx)(t.th,{children:"Required"}),(0,d.jsx)(t.th,{children:"Description"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"fundingScheduleId"})}),(0,d.jsx)(t.td,{children:"number"}),(0,d.jsx)(t.td,{children:"yes"}),(0,d.jsx)(t.td,{children:"The ID of the funding schedule that is used to calculate contributions to the spending object."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"name"})}),(0,d.jsx)(t.td,{children:"string"}),(0,d.jsx)(t.td,{children:"yes"}),(0,d.jsxs)(t.td,{children:["The name or title of the spending object, this must be unique within a bank account and ",(0,d.jsx)(t.code,{children:"spendingType"}),"."]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"description"})}),(0,d.jsx)(t.td,{children:"string"}),(0,d.jsx)(t.td,{children:"no"}),(0,d.jsx)(t.td,{children:"The description for the spending object."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"spendingType"})}),(0,d.jsx)(t.td,{children:"enum"}),(0,d.jsx)(t.td,{children:"yes"}),(0,d.jsxs)(t.td,{children:["The type of spending object this is. ",(0,d.jsx)("br",{})," - ",(0,d.jsx)(t.code,{children:"0"})," Expense ",(0,d.jsx)("br",{})," - ",(0,d.jsx)(t.code,{children:"1"})," Goal"]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"targetAmount"})}),(0,d.jsx)(t.td,{children:"number"}),(0,d.jsx)(t.td,{children:"yes"}),(0,d.jsxs)(t.td,{children:["The amount of money (in cents) that this spending object needs at or before it's ",(0,d.jsx)(t.code,{children:"nextRecurrence"})," date."]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"recurrenceRule"})}),(0,d.jsx)(t.td,{children:"string"}),(0,d.jsx)(t.td,{children:"no"}),(0,d.jsx)(t.td,{children:"The RRule used to calculate the due dates for a spending object, this is only present for Expenses."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"nextRecurrence"})}),(0,d.jsx)(t.td,{children:"datetime"}),(0,d.jsx)(t.td,{children:"yes"}),(0,d.jsx)(t.td,{children:"The timestamp of the next time this spending object is due, for a Goal this is just the day you want to complete the Goal. For an expense this is the next time it will recur before it is recalculated."})]})]})]}),"\n",(0,d.jsx)(t.h3,{id:"response-body-1",children:"Response Body"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Attribute"}),(0,d.jsx)(t.th,{children:"Type"}),(0,d.jsx)(t.th,{children:"Required"}),(0,d.jsx)(t.th,{children:"Description"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"spendingId"})}),(0,d.jsx)(t.td,{children:"number"}),(0,d.jsx)(t.td,{children:"yes"}),(0,d.jsx)(t.td,{children:"The unique identifier for a spending object within monetr."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"bankAccountId"})}),(0,d.jsx)(t.td,{children:"number"}),(0,d.jsx)(t.td,{children:"yes"}),(0,d.jsx)(t.td,{children:"The bank account that the spending object belongs to. This will match the path parameter for this API endpoint."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"fundingScheduleId"})}),(0,d.jsx)(t.td,{children:"number"}),(0,d.jsx)(t.td,{children:"yes"}),(0,d.jsx)(t.td,{children:"The ID of the funding schedule that is used to calculate contributions to the spending object."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"name"})}),(0,d.jsx)(t.td,{children:"string"}),(0,d.jsx)(t.td,{children:"yes"}),(0,d.jsxs)(t.td,{children:["The name or title of the spending object, this must be unique within a bank account and ",(0,d.jsx)(t.code,{children:"spendingType"}),"."]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"description"})}),(0,d.jsx)(t.td,{children:"string"}),(0,d.jsx)(t.td,{children:"no"}),(0,d.jsx)(t.td,{children:"The description for the spending object."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"spendingType"})}),(0,d.jsx)(t.td,{children:"enum"}),(0,d.jsx)(t.td,{children:"yes"}),(0,d.jsxs)(t.td,{children:["The type of spending object this is. ",(0,d.jsx)("br",{})," - ",(0,d.jsx)(t.code,{children:"0"})," Expense ",(0,d.jsx)("br",{})," - ",(0,d.jsx)(t.code,{children:"1"})," Goal"]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"targetAmount"})}),(0,d.jsx)(t.td,{children:"number"}),(0,d.jsx)(t.td,{children:"yes"}),(0,d.jsxs)(t.td,{children:["The amount of money (in cents) that this spending object needs at or before it's ",(0,d.jsx)(t.code,{children:"nextRecurrence"})," date."]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"currentAmount"})}),(0,d.jsx)(t.td,{children:"number"}),(0,d.jsx)(t.td,{children:"yes"}),(0,d.jsx)(t.td,{children:"The amount of money (in cents) that is allocated to this spending object."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"usedAmount"})}),(0,d.jsx)(t.td,{children:"number"}),(0,d.jsx)(t.td,{children:"no"}),(0,d.jsxs)(t.td,{children:["This field is only used for Goals, it is used to keep track of how much has been spent from the goal. When a transaction is spent from a Goal it increments the ",(0,d.jsx)(t.code,{children:"usedAmount"})," equal the the amount of the transaction or the ",(0,d.jsx)(t.code,{children:"currentAmount"})," of the spending object, whichever is lesser."]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"recurrenceRule"})}),(0,d.jsx)(t.td,{children:"string"}),(0,d.jsx)(t.td,{children:"no"}),(0,d.jsx)(t.td,{children:"The RRule used to calculate the due dates for a spending object, this is only present for Expenses."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"lastRecurrence"})}),(0,d.jsx)(t.td,{children:"datetime"}),(0,d.jsx)(t.td,{children:"no"}),(0,d.jsx)(t.td,{children:"The timestamp of the last time this spending object was due. This is not a reflection of the last time the spending object was used."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"nextRecurrence"})}),(0,d.jsx)(t.td,{children:"datetime"}),(0,d.jsx)(t.td,{children:"yes"}),(0,d.jsx)(t.td,{children:"The timestamp of the next time this spending object is due, for a Goal this is just the day you want to complete the Goal. For an expense this is the next time it will recur before it is recalculated."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"nextContributionAmount"})}),(0,d.jsx)(t.td,{children:"number"}),(0,d.jsx)(t.td,{children:"yes"}),(0,d.jsxs)(t.td,{children:["The amount of money (in cents) that will be allocated to the ",(0,d.jsx)(t.code,{children:"currentAmount"})," the next time the funding schedule is processed."]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"isBehind"})}),(0,d.jsx)(t.td,{children:"boolean"}),(0,d.jsx)(t.td,{children:"yes"}),(0,d.jsxs)(t.td,{children:["Spending objects can fall behind if there will not be a funding event before the ",(0,d.jsx)(t.code,{children:"nextRecurrence"})," and the ",(0,d.jsx)(t.code,{children:"currentAmount"})," is less than the ",(0,d.jsx)(t.code,{children:"targetAmount"}),"."]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"isPaused"})}),(0,d.jsx)(t.td,{children:"boolean"}),(0,d.jsx)(t.td,{children:"no"}),(0,d.jsx)(t.td,{children:"Spending objects can be paused, when they are paused they will not be funded or updated automatically."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"dateCreated"})}),(0,d.jsx)(t.td,{children:"datetime"}),(0,d.jsx)(t.td,{children:"yes"}),(0,d.jsx)(t.td,{children:"The timestamp of when this spending object was created."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"dateStarted"})}),(0,d.jsx)(t.td,{children:"datetime"}),(0,d.jsx)(t.td,{children:"yes"}),(0,d.jsx)(t.td,{children:"The timestamp of the first instance of the recurrence or the goal date. This is used to recalculate subsequent recurrences of an expense accurately."})]})]})]})]})}function MDXContent(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:t}=Object.assign({},(0,i.a)(),e.components);return t?(0,d.jsx)(t,{...e,children:(0,d.jsx)(_createMdxContent,{...e})}):_createMdxContent(e)}t.default=(0,s.j)({MDXContent,pageOpts:{filePath:"src/pages/documentation/development/api/spending.mdx",route:"/documentation/development/api/spending",timestamp:1698719236e3,title:"Spending",headings:r},pageNextRoute:"/documentation/development/api/spending"})}},function(e){e.O(0,[9304,9774,2888,179],function(){return e(e.s=8356)}),_N_E=e.O()}]);